// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="feature_extractor_ip,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=8.588000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=6,HLS_SYN_DSP=26,HLS_SYN_FF=4752,HLS_SYN_LUT=8833,HLS_VERSION=2019_1}" *)

module feature_extractor_ip (
        fir_in_V_TDATA,
        features_out_V_TDATA,
        ap_clk,
        ap_rst_n,
        fir_in_V_TVALID,
        fir_in_V_TREADY,
        ap_start,
        features_out_V_TVALID,
        features_out_V_TREADY,
        ap_done,
        ap_ready,
        ap_idle
);


input  [31:0] fir_in_V_TDATA;
output  [31:0] features_out_V_TDATA;
input   ap_clk;
input   ap_rst_n;
input   fir_in_V_TVALID;
output   fir_in_V_TREADY;
input   ap_start;
output   features_out_V_TVALID;
input   features_out_V_TREADY;
output   ap_done;
output   ap_ready;
output   ap_idle;

 reg    ap_rst_n_inv;
wire    peak_detection_U0_ap_start;
wire    peak_detection_U0_ap_done;
wire    peak_detection_U0_ap_continue;
wire    peak_detection_U0_ap_idle;
wire    peak_detection_U0_ap_ready;
wire    peak_detection_U0_start_out;
wire    peak_detection_U0_start_write;
wire    peak_detection_U0_in_V_TREADY;
wire   [9:0] peak_detection_U0_peak_loc_stream_V_V_din;
wire    peak_detection_U0_peak_loc_stream_V_V_write;
wire    interval_normalizati_U0_ap_start;
wire    interval_normalizati_U0_ap_done;
wire    interval_normalizati_U0_ap_continue;
wire    interval_normalizati_U0_ap_idle;
wire    interval_normalizati_U0_ap_ready;
wire    interval_normalizati_U0_start_out;
wire    interval_normalizati_U0_start_write;
wire    interval_normalizati_U0_peaks_V_V_read;
wire   [31:0] interval_normalizati_U0_normalized_out_V_din;
wire    interval_normalizati_U0_normalized_out_V_write;
wire    compute_features_U0_ap_start;
wire    compute_features_U0_ap_done;
wire    compute_features_U0_ap_continue;
wire    compute_features_U0_ap_idle;
wire    compute_features_U0_ap_ready;
wire    compute_features_U0_normalized_in_V_read;
wire   [31:0] compute_features_U0_features_out_V_TDATA;
wire    compute_features_U0_features_out_V_TVALID;
wire    ap_sync_continue;
wire    peak_loc_stream_V_V_full_n;
wire   [9:0] peak_loc_stream_V_V_dout;
wire    peak_loc_stream_V_V_empty_n;
wire    normalized_stream_V_full_n;
wire   [31:0] normalized_stream_V_dout;
wire    normalized_stream_V_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
wire   [0:0] start_for_interval_normalizati_U0_din;
wire    start_for_interval_normalizati_U0_full_n;
wire   [0:0] start_for_interval_normalizati_U0_dout;
wire    start_for_interval_normalizati_U0_empty_n;
wire   [0:0] start_for_compute_features_U0_din;
wire    start_for_compute_features_U0_full_n;
wire   [0:0] start_for_compute_features_U0_dout;
wire    start_for_compute_features_U0_empty_n;
wire    compute_features_U0_start_full_n;
wire    compute_features_U0_start_write;

peak_detection peak_detection_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(peak_detection_U0_ap_start),
    .start_full_n(start_for_interval_normalizati_U0_full_n),
    .ap_done(peak_detection_U0_ap_done),
    .ap_continue(peak_detection_U0_ap_continue),
    .ap_idle(peak_detection_U0_ap_idle),
    .ap_ready(peak_detection_U0_ap_ready),
    .start_out(peak_detection_U0_start_out),
    .start_write(peak_detection_U0_start_write),
    .in_V_TDATA(fir_in_V_TDATA),
    .in_V_TVALID(fir_in_V_TVALID),
    .in_V_TREADY(peak_detection_U0_in_V_TREADY),
    .peak_loc_stream_V_V_din(peak_detection_U0_peak_loc_stream_V_V_din),
    .peak_loc_stream_V_V_full_n(peak_loc_stream_V_V_full_n),
    .peak_loc_stream_V_V_write(peak_detection_U0_peak_loc_stream_V_V_write)
);

interval_normalizati interval_normalizati_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(interval_normalizati_U0_ap_start),
    .start_full_n(start_for_compute_features_U0_full_n),
    .ap_done(interval_normalizati_U0_ap_done),
    .ap_continue(interval_normalizati_U0_ap_continue),
    .ap_idle(interval_normalizati_U0_ap_idle),
    .ap_ready(interval_normalizati_U0_ap_ready),
    .start_out(interval_normalizati_U0_start_out),
    .start_write(interval_normalizati_U0_start_write),
    .peaks_V_V_dout(peak_loc_stream_V_V_dout),
    .peaks_V_V_empty_n(peak_loc_stream_V_V_empty_n),
    .peaks_V_V_read(interval_normalizati_U0_peaks_V_V_read),
    .normalized_out_V_din(interval_normalizati_U0_normalized_out_V_din),
    .normalized_out_V_full_n(normalized_stream_V_full_n),
    .normalized_out_V_write(interval_normalizati_U0_normalized_out_V_write)
);

compute_features compute_features_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(compute_features_U0_ap_start),
    .ap_done(compute_features_U0_ap_done),
    .ap_continue(compute_features_U0_ap_continue),
    .ap_idle(compute_features_U0_ap_idle),
    .ap_ready(compute_features_U0_ap_ready),
    .normalized_in_V_dout(normalized_stream_V_dout),
    .normalized_in_V_empty_n(normalized_stream_V_empty_n),
    .normalized_in_V_read(compute_features_U0_normalized_in_V_read),
    .features_out_V_TDATA(compute_features_U0_features_out_V_TDATA),
    .features_out_V_TVALID(compute_features_U0_features_out_V_TVALID),
    .features_out_V_TREADY(features_out_V_TREADY)
);

fifo_w10_d2_A peak_loc_stream_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(peak_detection_U0_peak_loc_stream_V_V_din),
    .if_full_n(peak_loc_stream_V_V_full_n),
    .if_write(peak_detection_U0_peak_loc_stream_V_V_write),
    .if_dout(peak_loc_stream_V_V_dout),
    .if_empty_n(peak_loc_stream_V_V_empty_n),
    .if_read(interval_normalizati_U0_peaks_V_V_read)
);

fifo_w32_d2_A normalized_stream_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(interval_normalizati_U0_normalized_out_V_din),
    .if_full_n(normalized_stream_V_full_n),
    .if_write(interval_normalizati_U0_normalized_out_V_write),
    .if_dout(normalized_stream_V_dout),
    .if_empty_n(normalized_stream_V_empty_n),
    .if_read(compute_features_U0_normalized_in_V_read)
);

start_for_intervaqcK start_for_intervaqcK_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_interval_normalizati_U0_din),
    .if_full_n(start_for_interval_normalizati_U0_full_n),
    .if_write(peak_detection_U0_start_write),
    .if_dout(start_for_interval_normalizati_U0_dout),
    .if_empty_n(start_for_interval_normalizati_U0_empty_n),
    .if_read(interval_normalizati_U0_ap_ready)
);

start_for_computercU start_for_computercU_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_compute_features_U0_din),
    .if_full_n(start_for_compute_features_U0_full_n),
    .if_write(interval_normalizati_U0_start_write),
    .if_dout(start_for_compute_features_U0_dout),
    .if_empty_n(start_for_compute_features_U0_empty_n),
    .if_read(compute_features_U0_ap_ready)
);

assign ap_done = compute_features_U0_ap_done;

assign ap_idle = (peak_detection_U0_ap_idle & interval_normalizati_U0_ap_idle & compute_features_U0_ap_idle);

assign ap_ready = peak_detection_U0_ap_ready;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_continue = 1'b1;

assign ap_sync_done = compute_features_U0_ap_done;

assign ap_sync_ready = peak_detection_U0_ap_ready;

assign compute_features_U0_ap_continue = 1'b1;

assign compute_features_U0_ap_start = start_for_compute_features_U0_empty_n;

assign compute_features_U0_start_full_n = 1'b1;

assign compute_features_U0_start_write = 1'b0;

assign features_out_V_TDATA = compute_features_U0_features_out_V_TDATA;

assign features_out_V_TVALID = compute_features_U0_features_out_V_TVALID;

assign fir_in_V_TREADY = peak_detection_U0_in_V_TREADY;

assign interval_normalizati_U0_ap_continue = 1'b1;

assign interval_normalizati_U0_ap_start = start_for_interval_normalizati_U0_empty_n;

assign peak_detection_U0_ap_continue = 1'b1;

assign peak_detection_U0_ap_start = ap_start;

assign start_for_compute_features_U0_din = 1'b1;

assign start_for_interval_normalizati_U0_din = 1'b1;

endmodule //feature_extractor_ip
