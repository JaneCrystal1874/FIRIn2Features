-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity peak_detection is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    in_V_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    in_V_TVALID : IN STD_LOGIC;
    in_V_TREADY : OUT STD_LOGIC;
    peak_loc_stream_V_V_din : OUT STD_LOGIC_VECTOR (9 downto 0);
    peak_loc_stream_V_V_full_n : IN STD_LOGIC;
    peak_loc_stream_V_V_write : OUT STD_LOGIC );
end;


architecture behav of peak_detection is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv7_6F : STD_LOGIC_VECTOR (6 downto 0) := "1101111";
    constant ap_const_lv11_200 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal in_V_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_nbreadreq_fu_90_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal peak_loc_stream_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal icmp_ln40_fu_238_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_450 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state2 : BOOLEAN;
    signal buf_wr_ptr_V_fu_204_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal buf_wr_ptr_V_reg_456 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_V_1_fu_212_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_V_1_reg_461 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln215_fu_216_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln215_reg_467 : STD_LOGIC_VECTOR (10 downto 0);
    signal bitcast_ln43_fu_220_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln43_reg_472 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln43_1_fu_228_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln43_1_reg_477 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_reg_482 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3 : BOOLEAN;
    signal select_ln1372_fu_308_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln1372_reg_486 : STD_LOGIC_VECTOR (10 downto 0);
    signal or_ln43_fu_331_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln43_reg_491 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal buf_buffer_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal buf_buffer_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln43_2_fu_363_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln43_2_reg_517 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln43_3_fu_369_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln43_3_reg_522 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln43_4_fu_393_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln43_4_reg_527 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln43_5_fu_399_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln43_5_reg_532 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_441_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal or_ln43_3_fu_435_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal buf_buffer_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal buf_buffer_ce0 : STD_LOGIC;
    signal buf_buffer_we0 : STD_LOGIC;
    signal buf_buffer_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal buf_buffer_ce1 : STD_LOGIC;
    signal t_V_reg_142 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal i_0_reg_153 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln544_fu_175_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_1_fu_336_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln544_fu_341_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln112_fu_180_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln700_fu_184_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_2_fu_196_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln891_fu_190_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln43_fu_224_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal zext_ln40_fu_234_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln42_fu_244_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln215_1_fu_249_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal ret_V_fu_253_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ret_V_1_fu_258_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln1372_fu_272_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln1372_1_fu_284_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1372_fu_288_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_and_t_fu_294_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_6_fu_264_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln1372_1_fu_302_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_and_f_fu_276_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_3_fu_316_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln43_fu_325_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln43_1_fu_345_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_349_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln43_1_fu_359_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal bitcast_ln43_2_fu_375_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_379_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln43_2_fu_389_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal or_ln43_1_fu_405_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln43_fu_409_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_165_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln43_2_fu_420_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln43_2_fu_424_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_170_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln43_1_fu_414_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln43_3_fu_429_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);

    component feature_extractorcud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component peak_detection_bubkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    buf_buffer_U : component peak_detection_bubkb
    generic map (
        DataWidth => 32,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_buffer_address0,
        ce0 => buf_buffer_ce0,
        we0 => buf_buffer_we0,
        d0 => in_V_TDATA,
        q0 => buf_buffer_q0,
        address1 => buf_buffer_address1,
        ce1 => buf_buffer_ce1,
        q1 => buf_buffer_q1);

    feature_extractorcud_U1 : component feature_extractorcud
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_9_reg_450,
        din1 => buf_buffer_q0,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_3,
        dout => grp_fu_165_p2);

    feature_extractorcud_U2 : component feature_extractorcud
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_9_reg_450,
        din1 => buf_buffer_q1,
        ce => ap_const_logic_1,
        opcode => ap_const_lv5_3,
        dout => grp_fu_170_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((not(((tmp_nbreadreq_fu_90_p3 = ap_const_lv1_1) and (in_V_TVALID = ap_const_logic_0))) and (tmp_nbreadreq_fu_90_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_0_reg_153_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln43_3_fu_435_p2 = ap_const_lv1_0) and (icmp_ln40_reg_482 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                i_0_reg_153 <= i_fu_441_p2;
            elsif ((not(((tmp_nbreadreq_fu_90_p3 = ap_const_lv1_1) and (in_V_TVALID = ap_const_logic_0))) and (tmp_nbreadreq_fu_90_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i_0_reg_153 <= ap_const_lv7_1;
            end if; 
        end if;
    end process;

    t_V_reg_142_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and ((icmp_ln40_reg_482 = ap_const_lv1_0) or (or_ln43_3_fu_435_p2 = ap_const_lv1_1)))) then 
                t_V_reg_142 <= buf_wr_ptr_V_reg_456;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                t_V_reg_142 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((tmp_nbreadreq_fu_90_p3 = ap_const_lv1_1) and (in_V_TVALID = ap_const_logic_0))) and (tmp_nbreadreq_fu_90_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                bitcast_ln43_reg_472 <= bitcast_ln43_fu_220_p1;
                buf_wr_ptr_V_reg_456 <= buf_wr_ptr_V_fu_204_p3;
                icmp_ln43_1_reg_477 <= icmp_ln43_1_fu_228_p2;
                tmp_9_reg_450 <= in_V_TDATA;
                    tmp_V_1_reg_461(8 downto 0) <= tmp_V_1_fu_212_p1(8 downto 0);
                    zext_ln215_reg_467(8 downto 0) <= zext_ln215_fu_216_p1(8 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((icmp_ln40_fu_238_p2 = ap_const_lv1_0) and (peak_loc_stream_V_V_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                icmp_ln40_reg_482 <= icmp_ln40_fu_238_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                icmp_ln43_2_reg_517 <= icmp_ln43_2_fu_363_p2;
                icmp_ln43_3_reg_522 <= icmp_ln43_3_fu_369_p2;
                icmp_ln43_4_reg_527 <= icmp_ln43_4_fu_393_p2;
                icmp_ln43_5_reg_532 <= icmp_ln43_5_fu_399_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((icmp_ln40_fu_238_p2 = ap_const_lv1_0) and (peak_loc_stream_V_V_full_n = ap_const_logic_0))) and (icmp_ln40_fu_238_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                or_ln43_reg_491 <= or_ln43_fu_331_p2;
                select_ln1372_reg_486 <= select_ln1372_fu_308_p3;
            end if;
        end if;
    end process;
    tmp_V_1_reg_461(9) <= '0';
    zext_ln215_reg_467(10 downto 9) <= "00";

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, in_V_TVALID, peak_loc_stream_V_V_full_n, ap_CS_fsm_state2, tmp_nbreadreq_fu_90_p3, ap_CS_fsm_state3, icmp_ln40_fu_238_p2, icmp_ln40_reg_482, ap_CS_fsm_state6, or_ln43_3_fu_435_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((not(((tmp_nbreadreq_fu_90_p3 = ap_const_lv1_1) and (in_V_TVALID = ap_const_logic_0))) and (tmp_nbreadreq_fu_90_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif ((not(((tmp_nbreadreq_fu_90_p3 = ap_const_lv1_1) and (in_V_TVALID = ap_const_logic_0))) and (tmp_nbreadreq_fu_90_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if ((not(((icmp_ln40_fu_238_p2 = ap_const_lv1_0) and (peak_loc_stream_V_V_full_n = ap_const_logic_0))) and (icmp_ln40_fu_238_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                elsif ((not(((icmp_ln40_fu_238_p2 = ap_const_lv1_0) and (peak_loc_stream_V_V_full_n = ap_const_logic_0))) and (icmp_ln40_fu_238_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and ((icmp_ln40_reg_482 = ap_const_lv1_0) or (or_ln43_3_fu_435_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    add_ln42_fu_244_p2 <= std_logic_vector(unsigned(tmp_V_1_reg_461) + unsigned(zext_ln40_fu_234_p1));
    add_ln700_fu_184_p2 <= std_logic_vector(unsigned(ap_const_lv10_1) + unsigned(zext_ln112_fu_180_p1));
    add_ln891_fu_190_p2 <= std_logic_vector(unsigned(ap_const_lv9_1) + unsigned(t_V_reg_142));
    and_ln43_1_fu_414_p2 <= (grp_fu_165_p2 and and_ln43_fu_409_p2);
    and_ln43_2_fu_424_p2 <= (or_ln43_reg_491 and or_ln43_2_fu_420_p2);
    and_ln43_3_fu_429_p2 <= (grp_fu_170_p2 and and_ln43_2_fu_424_p2);
    and_ln43_fu_409_p2 <= (or_ln43_reg_491 and or_ln43_1_fu_405_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);

    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state2_assign_proc : process(in_V_TVALID, tmp_nbreadreq_fu_90_p3)
    begin
                ap_block_state2 <= ((tmp_nbreadreq_fu_90_p3 = ap_const_lv1_1) and (in_V_TVALID = ap_const_logic_0));
    end process;


    ap_block_state3_assign_proc : process(peak_loc_stream_V_V_full_n, icmp_ln40_fu_238_p2)
    begin
                ap_block_state3 <= ((icmp_ln40_fu_238_p2 = ap_const_lv1_0) and (peak_loc_stream_V_V_full_n = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, in_V_TVALID, ap_CS_fsm_state2, tmp_nbreadreq_fu_90_p3)
    begin
        if ((not(((tmp_nbreadreq_fu_90_p3 = ap_const_lv1_1) and (in_V_TVALID = ap_const_logic_0))) and (tmp_nbreadreq_fu_90_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;
    bitcast_ln43_1_fu_345_p1 <= buf_buffer_q0;
    bitcast_ln43_2_fu_375_p1 <= buf_buffer_q1;
    bitcast_ln43_fu_220_p1 <= in_V_TDATA;

    buf_buffer_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, zext_ln544_fu_175_p1, zext_ln544_1_fu_336_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buf_buffer_address0 <= zext_ln544_1_fu_336_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            buf_buffer_address0 <= zext_ln544_fu_175_p1(9 - 1 downto 0);
        else 
            buf_buffer_address0 <= "XXXXXXXXX";
        end if; 
    end process;

    buf_buffer_address1 <= sext_ln544_fu_341_p1(9 - 1 downto 0);

    buf_buffer_ce0_assign_proc : process(in_V_TVALID, ap_CS_fsm_state2, tmp_nbreadreq_fu_90_p3, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (not(((tmp_nbreadreq_fu_90_p3 = ap_const_lv1_1) and (in_V_TVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            buf_buffer_ce0 <= ap_const_logic_1;
        else 
            buf_buffer_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_buffer_ce1_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            buf_buffer_ce1 <= ap_const_logic_1;
        else 
            buf_buffer_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_buffer_we0_assign_proc : process(in_V_TVALID, ap_CS_fsm_state2, tmp_nbreadreq_fu_90_p3)
    begin
        if ((not(((tmp_nbreadreq_fu_90_p3 = ap_const_lv1_1) and (in_V_TVALID = ap_const_logic_0))) and (tmp_nbreadreq_fu_90_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            buf_buffer_we0 <= ap_const_logic_1;
        else 
            buf_buffer_we0 <= ap_const_logic_0;
        end if; 
    end process;

    buf_wr_ptr_V_fu_204_p3 <= 
        ap_const_lv9_0 when (tmp_2_fu_196_p3(0) = '1') else 
        add_ln891_fu_190_p2;
    i_fu_441_p2 <= std_logic_vector(unsigned(i_0_reg_153) + unsigned(ap_const_lv7_1));
    icmp_ln40_fu_238_p2 <= "1" when (unsigned(i_0_reg_153) < unsigned(ap_const_lv7_6F)) else "0";
    icmp_ln43_1_fu_228_p2 <= "1" when (trunc_ln43_fu_224_p1 = ap_const_lv23_0) else "0";
    icmp_ln43_2_fu_363_p2 <= "0" when (tmp_4_fu_349_p4 = ap_const_lv8_FF) else "1";
    icmp_ln43_3_fu_369_p2 <= "1" when (trunc_ln43_1_fu_359_p1 = ap_const_lv23_0) else "0";
    icmp_ln43_4_fu_393_p2 <= "0" when (tmp_7_fu_379_p4 = ap_const_lv8_FF) else "1";
    icmp_ln43_5_fu_399_p2 <= "1" when (trunc_ln43_2_fu_389_p1 = ap_const_lv23_0) else "0";
    icmp_ln43_fu_325_p2 <= "0" when (tmp_3_fu_316_p4 = ap_const_lv8_FF) else "1";

    in_V_TDATA_blk_n_assign_proc : process(in_V_TVALID, ap_CS_fsm_state2, tmp_nbreadreq_fu_90_p3)
    begin
        if (((tmp_nbreadreq_fu_90_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            in_V_TDATA_blk_n <= in_V_TVALID;
        else 
            in_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_V_TREADY_assign_proc : process(in_V_TVALID, ap_CS_fsm_state2, tmp_nbreadreq_fu_90_p3)
    begin
        if ((not(((tmp_nbreadreq_fu_90_p3 = ap_const_lv1_1) and (in_V_TVALID = ap_const_logic_0))) and (tmp_nbreadreq_fu_90_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            in_V_TREADY <= ap_const_logic_1;
        else 
            in_V_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    internal_ap_ready_assign_proc : process(in_V_TVALID, ap_CS_fsm_state2, tmp_nbreadreq_fu_90_p3)
    begin
        if ((not(((tmp_nbreadreq_fu_90_p3 = ap_const_lv1_1) and (in_V_TVALID = ap_const_logic_0))) and (tmp_nbreadreq_fu_90_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    or_ln43_1_fu_405_p2 <= (icmp_ln43_3_reg_522 or icmp_ln43_2_reg_517);
    or_ln43_2_fu_420_p2 <= (icmp_ln43_5_reg_532 or icmp_ln43_4_reg_527);
    or_ln43_3_fu_435_p2 <= (and_ln43_3_fu_429_p2 or and_ln43_1_fu_414_p2);
    or_ln43_fu_331_p2 <= (icmp_ln43_fu_325_p2 or icmp_ln43_1_reg_477);
    p_and_f_fu_276_p3 <= (ap_const_lv2_0 & trunc_ln1372_fu_272_p1);
    p_and_t_fu_294_p3 <= (ap_const_lv2_0 & sub_ln1372_fu_288_p2);

    peak_loc_stream_V_V_blk_n_assign_proc : process(peak_loc_stream_V_V_full_n, ap_CS_fsm_state3, icmp_ln40_fu_238_p2)
    begin
        if (((icmp_ln40_fu_238_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            peak_loc_stream_V_V_blk_n <= peak_loc_stream_V_V_full_n;
        else 
            peak_loc_stream_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    peak_loc_stream_V_V_din <= tmp_V_1_reg_461;

    peak_loc_stream_V_V_write_assign_proc : process(peak_loc_stream_V_V_full_n, ap_CS_fsm_state3, icmp_ln40_fu_238_p2)
    begin
        if ((not(((icmp_ln40_fu_238_p2 = ap_const_lv1_0) and (peak_loc_stream_V_V_full_n = ap_const_logic_0))) and (icmp_ln40_fu_238_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            peak_loc_stream_V_V_write <= ap_const_logic_1;
        else 
            peak_loc_stream_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    ret_V_1_fu_258_p2 <= std_logic_vector(unsigned(ap_const_lv11_200) + unsigned(ret_V_fu_253_p2));
    ret_V_fu_253_p2 <= std_logic_vector(unsigned(zext_ln215_reg_467) - unsigned(zext_ln215_1_fu_249_p1));
    select_ln1372_fu_308_p3 <= 
        sub_ln1372_1_fu_302_p2 when (tmp_6_fu_264_p3(0) = '1') else 
        p_and_f_fu_276_p3;
        sext_ln544_fu_341_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln1372_reg_486),64));

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln1372_1_fu_302_p2 <= std_logic_vector(unsigned(ap_const_lv11_0) - unsigned(p_and_t_fu_294_p3));
    sub_ln1372_fu_288_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(trunc_ln1372_1_fu_284_p1));
    tmp_2_fu_196_p3 <= add_ln700_fu_184_p2(9 downto 9);
    tmp_3_fu_316_p4 <= bitcast_ln43_reg_472(30 downto 23);
    tmp_4_fu_349_p4 <= bitcast_ln43_1_fu_345_p1(30 downto 23);
    tmp_6_fu_264_p3 <= ret_V_1_fu_258_p2(10 downto 10);
    tmp_7_fu_379_p4 <= bitcast_ln43_2_fu_375_p1(30 downto 23);
    tmp_V_1_fu_212_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(buf_wr_ptr_V_fu_204_p3),10));
    tmp_nbreadreq_fu_90_p3 <= (0=>(in_V_TVALID), others=>'-');
    trunc_ln1372_1_fu_284_p1 <= ret_V_fu_253_p2(9 - 1 downto 0);
    trunc_ln1372_fu_272_p1 <= ret_V_1_fu_258_p2(9 - 1 downto 0);
    trunc_ln43_1_fu_359_p1 <= bitcast_ln43_1_fu_345_p1(23 - 1 downto 0);
    trunc_ln43_2_fu_389_p1 <= bitcast_ln43_2_fu_375_p1(23 - 1 downto 0);
    trunc_ln43_fu_224_p1 <= bitcast_ln43_fu_220_p1(23 - 1 downto 0);
    zext_ln112_fu_180_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_reg_142),10));
    zext_ln215_1_fu_249_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln42_fu_244_p2),11));
    zext_ln215_fu_216_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(buf_wr_ptr_V_fu_204_p3),11));
    zext_ln40_fu_234_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_reg_153),10));
    zext_ln544_1_fu_336_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_reg_153),64));
    zext_ln544_fu_175_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_reg_142),64));
end behav;
