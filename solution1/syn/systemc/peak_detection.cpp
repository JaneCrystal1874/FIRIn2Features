// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "peak_detection.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic peak_detection::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic peak_detection::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> peak_detection::ap_ST_fsm_state1 = "1";
const sc_lv<6> peak_detection::ap_ST_fsm_state2 = "10";
const sc_lv<6> peak_detection::ap_ST_fsm_state3 = "100";
const sc_lv<6> peak_detection::ap_ST_fsm_state4 = "1000";
const sc_lv<6> peak_detection::ap_ST_fsm_state5 = "10000";
const sc_lv<6> peak_detection::ap_ST_fsm_state6 = "100000";
const sc_lv<32> peak_detection::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> peak_detection::ap_const_lv32_1 = "1";
const sc_lv<1> peak_detection::ap_const_lv1_1 = "1";
const sc_lv<32> peak_detection::ap_const_lv32_2 = "10";
const sc_lv<1> peak_detection::ap_const_lv1_0 = "0";
const sc_lv<32> peak_detection::ap_const_lv32_3 = "11";
const sc_lv<32> peak_detection::ap_const_lv32_4 = "100";
const sc_lv<32> peak_detection::ap_const_lv32_5 = "101";
const sc_lv<9> peak_detection::ap_const_lv9_0 = "000000000";
const sc_lv<7> peak_detection::ap_const_lv7_1 = "1";
const sc_lv<10> peak_detection::ap_const_lv10_1 = "1";
const sc_lv<9> peak_detection::ap_const_lv9_1 = "1";
const sc_lv<32> peak_detection::ap_const_lv32_9 = "1001";
const sc_lv<23> peak_detection::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<7> peak_detection::ap_const_lv7_6F = "1101111";
const sc_lv<11> peak_detection::ap_const_lv11_200 = "1000000000";
const sc_lv<32> peak_detection::ap_const_lv32_A = "1010";
const sc_lv<2> peak_detection::ap_const_lv2_0 = "00";
const sc_lv<11> peak_detection::ap_const_lv11_0 = "00000000000";
const sc_lv<32> peak_detection::ap_const_lv32_17 = "10111";
const sc_lv<32> peak_detection::ap_const_lv32_1E = "11110";
const sc_lv<8> peak_detection::ap_const_lv8_FF = "11111111";
const sc_lv<5> peak_detection::ap_const_lv5_3 = "11";
const bool peak_detection::ap_const_boolean_1 = true;

peak_detection::peak_detection(sc_module_name name) : sc_module(name), mVcdFile(0) {
    buf_buffer_U = new peak_detection_bubkb("buf_buffer_U");
    buf_buffer_U->clk(ap_clk);
    buf_buffer_U->reset(ap_rst);
    buf_buffer_U->address0(buf_buffer_address0);
    buf_buffer_U->ce0(buf_buffer_ce0);
    buf_buffer_U->we0(buf_buffer_we0);
    buf_buffer_U->d0(in_V_TDATA);
    buf_buffer_U->q0(buf_buffer_q0);
    buf_buffer_U->address1(buf_buffer_address1);
    buf_buffer_U->ce1(buf_buffer_ce1);
    buf_buffer_U->q1(buf_buffer_q1);
    feature_extractorcud_U1 = new feature_extractorcud<1,2,32,32,1>("feature_extractorcud_U1");
    feature_extractorcud_U1->clk(ap_clk);
    feature_extractorcud_U1->reset(ap_rst);
    feature_extractorcud_U1->din0(tmp_9_reg_450);
    feature_extractorcud_U1->din1(buf_buffer_q0);
    feature_extractorcud_U1->ce(ap_var_for_const0);
    feature_extractorcud_U1->opcode(ap_var_for_const1);
    feature_extractorcud_U1->dout(grp_fu_165_p2);
    feature_extractorcud_U2 = new feature_extractorcud<1,2,32,32,1>("feature_extractorcud_U2");
    feature_extractorcud_U2->clk(ap_clk);
    feature_extractorcud_U2->reset(ap_rst);
    feature_extractorcud_U2->din0(tmp_9_reg_450);
    feature_extractorcud_U2->din1(buf_buffer_q1);
    feature_extractorcud_U2->ce(ap_var_for_const0);
    feature_extractorcud_U2->opcode(ap_var_for_const1);
    feature_extractorcud_U2->dout(grp_fu_170_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln42_fu_244_p2);
    sensitive << ( tmp_V_1_reg_461 );
    sensitive << ( zext_ln40_fu_234_p1 );

    SC_METHOD(thread_add_ln700_fu_184_p2);
    sensitive << ( zext_ln112_fu_180_p1 );

    SC_METHOD(thread_add_ln891_fu_190_p2);
    sensitive << ( t_V_reg_142 );

    SC_METHOD(thread_and_ln43_1_fu_414_p2);
    sensitive << ( and_ln43_fu_409_p2 );
    sensitive << ( grp_fu_165_p2 );

    SC_METHOD(thread_and_ln43_2_fu_424_p2);
    sensitive << ( or_ln43_reg_491 );
    sensitive << ( or_ln43_2_fu_420_p2 );

    SC_METHOD(thread_and_ln43_3_fu_429_p2);
    sensitive << ( and_ln43_2_fu_424_p2 );
    sensitive << ( grp_fu_170_p2 );

    SC_METHOD(thread_and_ln43_fu_409_p2);
    sensitive << ( or_ln43_reg_491 );
    sensitive << ( or_ln43_1_fu_405_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state2);
    sensitive << ( in_V_TVALID );
    sensitive << ( tmp_nbreadreq_fu_90_p3 );

    SC_METHOD(thread_ap_block_state3);
    sensitive << ( peak_loc_stream_V_V_full_n );
    sensitive << ( icmp_ln40_fu_238_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( in_V_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_nbreadreq_fu_90_p3 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_bitcast_ln43_1_fu_345_p1);
    sensitive << ( buf_buffer_q0 );

    SC_METHOD(thread_bitcast_ln43_2_fu_375_p1);
    sensitive << ( buf_buffer_q1 );

    SC_METHOD(thread_bitcast_ln43_fu_220_p1);
    sensitive << ( in_V_TDATA );

    SC_METHOD(thread_buf_buffer_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln544_fu_175_p1 );
    sensitive << ( zext_ln544_1_fu_336_p1 );

    SC_METHOD(thread_buf_buffer_address1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sext_ln544_fu_341_p1 );

    SC_METHOD(thread_buf_buffer_ce0);
    sensitive << ( in_V_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_nbreadreq_fu_90_p3 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buf_buffer_ce1);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_buf_buffer_we0);
    sensitive << ( in_V_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_nbreadreq_fu_90_p3 );

    SC_METHOD(thread_buf_wr_ptr_V_fu_204_p3);
    sensitive << ( tmp_2_fu_196_p3 );
    sensitive << ( add_ln891_fu_190_p2 );

    SC_METHOD(thread_i_fu_441_p2);
    sensitive << ( i_0_reg_153 );

    SC_METHOD(thread_icmp_ln40_fu_238_p2);
    sensitive << ( peak_loc_stream_V_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln40_fu_238_p2 );
    sensitive << ( i_0_reg_153 );

    SC_METHOD(thread_icmp_ln43_1_fu_228_p2);
    sensitive << ( in_V_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_nbreadreq_fu_90_p3 );
    sensitive << ( trunc_ln43_fu_224_p1 );

    SC_METHOD(thread_icmp_ln43_2_fu_363_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_4_fu_349_p4 );

    SC_METHOD(thread_icmp_ln43_3_fu_369_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( trunc_ln43_1_fu_359_p1 );

    SC_METHOD(thread_icmp_ln43_4_fu_393_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_7_fu_379_p4 );

    SC_METHOD(thread_icmp_ln43_5_fu_399_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( trunc_ln43_2_fu_389_p1 );

    SC_METHOD(thread_icmp_ln43_fu_325_p2);
    sensitive << ( peak_loc_stream_V_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln40_fu_238_p2 );
    sensitive << ( tmp_3_fu_316_p4 );

    SC_METHOD(thread_in_V_TDATA_blk_n);
    sensitive << ( in_V_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_nbreadreq_fu_90_p3 );

    SC_METHOD(thread_in_V_TREADY);
    sensitive << ( in_V_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_nbreadreq_fu_90_p3 );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( in_V_TVALID );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_nbreadreq_fu_90_p3 );

    SC_METHOD(thread_or_ln43_1_fu_405_p2);
    sensitive << ( icmp_ln43_2_reg_517 );
    sensitive << ( icmp_ln43_3_reg_522 );

    SC_METHOD(thread_or_ln43_2_fu_420_p2);
    sensitive << ( icmp_ln43_4_reg_527 );
    sensitive << ( icmp_ln43_5_reg_532 );

    SC_METHOD(thread_or_ln43_3_fu_435_p2);
    sensitive << ( and_ln43_1_fu_414_p2 );
    sensitive << ( and_ln43_3_fu_429_p2 );

    SC_METHOD(thread_or_ln43_fu_331_p2);
    sensitive << ( icmp_ln43_1_reg_477 );
    sensitive << ( icmp_ln43_fu_325_p2 );

    SC_METHOD(thread_p_and_f_fu_276_p3);
    sensitive << ( trunc_ln1372_fu_272_p1 );

    SC_METHOD(thread_p_and_t_fu_294_p3);
    sensitive << ( sub_ln1372_fu_288_p2 );

    SC_METHOD(thread_peak_loc_stream_V_V_blk_n);
    sensitive << ( peak_loc_stream_V_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln40_fu_238_p2 );

    SC_METHOD(thread_peak_loc_stream_V_V_din);
    sensitive << ( peak_loc_stream_V_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln40_fu_238_p2 );
    sensitive << ( tmp_V_1_reg_461 );

    SC_METHOD(thread_peak_loc_stream_V_V_write);
    sensitive << ( peak_loc_stream_V_V_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln40_fu_238_p2 );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_ret_V_1_fu_258_p2);
    sensitive << ( ret_V_fu_253_p2 );

    SC_METHOD(thread_ret_V_fu_253_p2);
    sensitive << ( zext_ln215_reg_467 );
    sensitive << ( zext_ln215_1_fu_249_p1 );

    SC_METHOD(thread_select_ln1372_fu_308_p3);
    sensitive << ( tmp_6_fu_264_p3 );
    sensitive << ( sub_ln1372_1_fu_302_p2 );
    sensitive << ( p_and_f_fu_276_p3 );

    SC_METHOD(thread_sext_ln544_fu_341_p1);
    sensitive << ( select_ln1372_reg_486 );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_sub_ln1372_1_fu_302_p2);
    sensitive << ( p_and_t_fu_294_p3 );

    SC_METHOD(thread_sub_ln1372_fu_288_p2);
    sensitive << ( trunc_ln1372_1_fu_284_p1 );

    SC_METHOD(thread_tmp_2_fu_196_p3);
    sensitive << ( add_ln700_fu_184_p2 );

    SC_METHOD(thread_tmp_3_fu_316_p4);
    sensitive << ( bitcast_ln43_reg_472 );

    SC_METHOD(thread_tmp_4_fu_349_p4);
    sensitive << ( bitcast_ln43_1_fu_345_p1 );

    SC_METHOD(thread_tmp_6_fu_264_p3);
    sensitive << ( ret_V_1_fu_258_p2 );

    SC_METHOD(thread_tmp_7_fu_379_p4);
    sensitive << ( bitcast_ln43_2_fu_375_p1 );

    SC_METHOD(thread_tmp_V_1_fu_212_p1);
    sensitive << ( buf_wr_ptr_V_fu_204_p3 );

    SC_METHOD(thread_tmp_nbreadreq_fu_90_p3);
    sensitive << ( in_V_TVALID );

    SC_METHOD(thread_trunc_ln1372_1_fu_284_p1);
    sensitive << ( ret_V_fu_253_p2 );

    SC_METHOD(thread_trunc_ln1372_fu_272_p1);
    sensitive << ( ret_V_1_fu_258_p2 );

    SC_METHOD(thread_trunc_ln43_1_fu_359_p1);
    sensitive << ( bitcast_ln43_1_fu_345_p1 );

    SC_METHOD(thread_trunc_ln43_2_fu_389_p1);
    sensitive << ( bitcast_ln43_2_fu_375_p1 );

    SC_METHOD(thread_trunc_ln43_fu_224_p1);
    sensitive << ( bitcast_ln43_fu_220_p1 );

    SC_METHOD(thread_zext_ln112_fu_180_p1);
    sensitive << ( t_V_reg_142 );

    SC_METHOD(thread_zext_ln215_1_fu_249_p1);
    sensitive << ( add_ln42_fu_244_p2 );

    SC_METHOD(thread_zext_ln215_fu_216_p1);
    sensitive << ( buf_wr_ptr_V_fu_204_p3 );

    SC_METHOD(thread_zext_ln40_fu_234_p1);
    sensitive << ( i_0_reg_153 );

    SC_METHOD(thread_zext_ln544_1_fu_336_p1);
    sensitive << ( i_0_reg_153 );

    SC_METHOD(thread_zext_ln544_fu_175_p1);
    sensitive << ( t_V_reg_142 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( in_V_TVALID );
    sensitive << ( peak_loc_stream_V_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_nbreadreq_fu_90_p3 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln40_fu_238_p2 );
    sensitive << ( icmp_ln40_reg_482 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( or_ln43_3_fu_435_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "peak_detection_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, in_V_TDATA, "(port)in_V_TDATA");
    sc_trace(mVcdFile, in_V_TVALID, "(port)in_V_TVALID");
    sc_trace(mVcdFile, in_V_TREADY, "(port)in_V_TREADY");
    sc_trace(mVcdFile, peak_loc_stream_V_V_din, "(port)peak_loc_stream_V_V_din");
    sc_trace(mVcdFile, peak_loc_stream_V_V_full_n, "(port)peak_loc_stream_V_V_full_n");
    sc_trace(mVcdFile, peak_loc_stream_V_V_write, "(port)peak_loc_stream_V_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, in_V_TDATA_blk_n, "in_V_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_nbreadreq_fu_90_p3, "tmp_nbreadreq_fu_90_p3");
    sc_trace(mVcdFile, peak_loc_stream_V_V_blk_n, "peak_loc_stream_V_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, icmp_ln40_fu_238_p2, "icmp_ln40_fu_238_p2");
    sc_trace(mVcdFile, tmp_9_reg_450, "tmp_9_reg_450");
    sc_trace(mVcdFile, ap_block_state2, "ap_block_state2");
    sc_trace(mVcdFile, buf_wr_ptr_V_fu_204_p3, "buf_wr_ptr_V_fu_204_p3");
    sc_trace(mVcdFile, buf_wr_ptr_V_reg_456, "buf_wr_ptr_V_reg_456");
    sc_trace(mVcdFile, tmp_V_1_fu_212_p1, "tmp_V_1_fu_212_p1");
    sc_trace(mVcdFile, tmp_V_1_reg_461, "tmp_V_1_reg_461");
    sc_trace(mVcdFile, zext_ln215_fu_216_p1, "zext_ln215_fu_216_p1");
    sc_trace(mVcdFile, zext_ln215_reg_467, "zext_ln215_reg_467");
    sc_trace(mVcdFile, bitcast_ln43_fu_220_p1, "bitcast_ln43_fu_220_p1");
    sc_trace(mVcdFile, bitcast_ln43_reg_472, "bitcast_ln43_reg_472");
    sc_trace(mVcdFile, icmp_ln43_1_fu_228_p2, "icmp_ln43_1_fu_228_p2");
    sc_trace(mVcdFile, icmp_ln43_1_reg_477, "icmp_ln43_1_reg_477");
    sc_trace(mVcdFile, icmp_ln40_reg_482, "icmp_ln40_reg_482");
    sc_trace(mVcdFile, ap_block_state3, "ap_block_state3");
    sc_trace(mVcdFile, select_ln1372_fu_308_p3, "select_ln1372_fu_308_p3");
    sc_trace(mVcdFile, select_ln1372_reg_486, "select_ln1372_reg_486");
    sc_trace(mVcdFile, or_ln43_fu_331_p2, "or_ln43_fu_331_p2");
    sc_trace(mVcdFile, or_ln43_reg_491, "or_ln43_reg_491");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, buf_buffer_q0, "buf_buffer_q0");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, buf_buffer_q1, "buf_buffer_q1");
    sc_trace(mVcdFile, icmp_ln43_2_fu_363_p2, "icmp_ln43_2_fu_363_p2");
    sc_trace(mVcdFile, icmp_ln43_2_reg_517, "icmp_ln43_2_reg_517");
    sc_trace(mVcdFile, icmp_ln43_3_fu_369_p2, "icmp_ln43_3_fu_369_p2");
    sc_trace(mVcdFile, icmp_ln43_3_reg_522, "icmp_ln43_3_reg_522");
    sc_trace(mVcdFile, icmp_ln43_4_fu_393_p2, "icmp_ln43_4_fu_393_p2");
    sc_trace(mVcdFile, icmp_ln43_4_reg_527, "icmp_ln43_4_reg_527");
    sc_trace(mVcdFile, icmp_ln43_5_fu_399_p2, "icmp_ln43_5_fu_399_p2");
    sc_trace(mVcdFile, icmp_ln43_5_reg_532, "icmp_ln43_5_reg_532");
    sc_trace(mVcdFile, i_fu_441_p2, "i_fu_441_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, or_ln43_3_fu_435_p2, "or_ln43_3_fu_435_p2");
    sc_trace(mVcdFile, buf_buffer_address0, "buf_buffer_address0");
    sc_trace(mVcdFile, buf_buffer_ce0, "buf_buffer_ce0");
    sc_trace(mVcdFile, buf_buffer_we0, "buf_buffer_we0");
    sc_trace(mVcdFile, buf_buffer_address1, "buf_buffer_address1");
    sc_trace(mVcdFile, buf_buffer_ce1, "buf_buffer_ce1");
    sc_trace(mVcdFile, t_V_reg_142, "t_V_reg_142");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, i_0_reg_153, "i_0_reg_153");
    sc_trace(mVcdFile, zext_ln544_fu_175_p1, "zext_ln544_fu_175_p1");
    sc_trace(mVcdFile, zext_ln544_1_fu_336_p1, "zext_ln544_1_fu_336_p1");
    sc_trace(mVcdFile, sext_ln544_fu_341_p1, "sext_ln544_fu_341_p1");
    sc_trace(mVcdFile, zext_ln112_fu_180_p1, "zext_ln112_fu_180_p1");
    sc_trace(mVcdFile, add_ln700_fu_184_p2, "add_ln700_fu_184_p2");
    sc_trace(mVcdFile, tmp_2_fu_196_p3, "tmp_2_fu_196_p3");
    sc_trace(mVcdFile, add_ln891_fu_190_p2, "add_ln891_fu_190_p2");
    sc_trace(mVcdFile, trunc_ln43_fu_224_p1, "trunc_ln43_fu_224_p1");
    sc_trace(mVcdFile, zext_ln40_fu_234_p1, "zext_ln40_fu_234_p1");
    sc_trace(mVcdFile, add_ln42_fu_244_p2, "add_ln42_fu_244_p2");
    sc_trace(mVcdFile, zext_ln215_1_fu_249_p1, "zext_ln215_1_fu_249_p1");
    sc_trace(mVcdFile, ret_V_fu_253_p2, "ret_V_fu_253_p2");
    sc_trace(mVcdFile, ret_V_1_fu_258_p2, "ret_V_1_fu_258_p2");
    sc_trace(mVcdFile, trunc_ln1372_fu_272_p1, "trunc_ln1372_fu_272_p1");
    sc_trace(mVcdFile, trunc_ln1372_1_fu_284_p1, "trunc_ln1372_1_fu_284_p1");
    sc_trace(mVcdFile, sub_ln1372_fu_288_p2, "sub_ln1372_fu_288_p2");
    sc_trace(mVcdFile, p_and_t_fu_294_p3, "p_and_t_fu_294_p3");
    sc_trace(mVcdFile, tmp_6_fu_264_p3, "tmp_6_fu_264_p3");
    sc_trace(mVcdFile, sub_ln1372_1_fu_302_p2, "sub_ln1372_1_fu_302_p2");
    sc_trace(mVcdFile, p_and_f_fu_276_p3, "p_and_f_fu_276_p3");
    sc_trace(mVcdFile, tmp_3_fu_316_p4, "tmp_3_fu_316_p4");
    sc_trace(mVcdFile, icmp_ln43_fu_325_p2, "icmp_ln43_fu_325_p2");
    sc_trace(mVcdFile, bitcast_ln43_1_fu_345_p1, "bitcast_ln43_1_fu_345_p1");
    sc_trace(mVcdFile, tmp_4_fu_349_p4, "tmp_4_fu_349_p4");
    sc_trace(mVcdFile, trunc_ln43_1_fu_359_p1, "trunc_ln43_1_fu_359_p1");
    sc_trace(mVcdFile, bitcast_ln43_2_fu_375_p1, "bitcast_ln43_2_fu_375_p1");
    sc_trace(mVcdFile, tmp_7_fu_379_p4, "tmp_7_fu_379_p4");
    sc_trace(mVcdFile, trunc_ln43_2_fu_389_p1, "trunc_ln43_2_fu_389_p1");
    sc_trace(mVcdFile, or_ln43_1_fu_405_p2, "or_ln43_1_fu_405_p2");
    sc_trace(mVcdFile, and_ln43_fu_409_p2, "and_ln43_fu_409_p2");
    sc_trace(mVcdFile, grp_fu_165_p2, "grp_fu_165_p2");
    sc_trace(mVcdFile, or_ln43_2_fu_420_p2, "or_ln43_2_fu_420_p2");
    sc_trace(mVcdFile, and_ln43_2_fu_424_p2, "and_ln43_2_fu_424_p2");
    sc_trace(mVcdFile, grp_fu_170_p2, "grp_fu_170_p2");
    sc_trace(mVcdFile, and_ln43_1_fu_414_p2, "and_ln43_1_fu_414_p2");
    sc_trace(mVcdFile, and_ln43_3_fu_429_p2, "and_ln43_3_fu_429_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

peak_detection::~peak_detection() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete buf_buffer_U;
    delete feature_extractorcud_U1;
    delete feature_extractorcud_U2;
}

void peak_detection::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void peak_detection::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv5_3;
}

void peak_detection::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    !(esl_seteq<1,1,1>(tmp_nbreadreq_fu_90_p3.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, in_V_TVALID.read())) && 
                    esl_seteq<1,1,1>(tmp_nbreadreq_fu_90_p3.read(), ap_const_lv1_0))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln40_reg_482.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, or_ln43_3_fu_435_p2.read()))) {
        i_0_reg_153 = i_fu_441_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(tmp_nbreadreq_fu_90_p3.read(), ap_const_lv1_1) && 
                !(esl_seteq<1,1,1>(tmp_nbreadreq_fu_90_p3.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, in_V_TVALID.read())))) {
        i_0_reg_153 = ap_const_lv7_1;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         (esl_seteq<1,1,1>(ap_const_lv1_1, or_ln43_3_fu_435_p2.read()) || 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln40_reg_482.read())))) {
        t_V_reg_142 = buf_wr_ptr_V_reg_456.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        t_V_reg_142 = ap_const_lv9_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(tmp_nbreadreq_fu_90_p3.read(), ap_const_lv1_1) && !(esl_seteq<1,1,1>(tmp_nbreadreq_fu_90_p3.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, in_V_TVALID.read())))) {
        bitcast_ln43_reg_472 = bitcast_ln43_fu_220_p1.read();
        buf_wr_ptr_V_reg_456 = buf_wr_ptr_V_fu_204_p3.read();
        icmp_ln43_1_reg_477 = icmp_ln43_1_fu_228_p2.read();
        tmp_9_reg_450 = in_V_TDATA.read();
        tmp_V_1_reg_461 = tmp_V_1_fu_212_p1.read();
        zext_ln215_reg_467 = zext_ln215_fu_216_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && !(esl_seteq<1,1,1>(icmp_ln40_fu_238_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, peak_loc_stream_V_V_full_n.read())))) {
        icmp_ln40_reg_482 = icmp_ln40_fu_238_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        icmp_ln43_2_reg_517 = icmp_ln43_2_fu_363_p2.read();
        icmp_ln43_3_reg_522 = icmp_ln43_3_fu_369_p2.read();
        icmp_ln43_4_reg_527 = icmp_ln43_4_fu_393_p2.read();
        icmp_ln43_5_reg_532 = icmp_ln43_5_fu_399_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && !(esl_seteq<1,1,1>(icmp_ln40_fu_238_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, peak_loc_stream_V_V_full_n.read())) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln40_fu_238_p2.read()))) {
        or_ln43_reg_491 = or_ln43_fu_331_p2.read();
        select_ln1372_reg_486 = select_ln1372_fu_308_p3.read();
    }
}

void peak_detection::thread_add_ln42_fu_244_p2() {
    add_ln42_fu_244_p2 = (!tmp_V_1_reg_461.read().is_01() || !zext_ln40_fu_234_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(tmp_V_1_reg_461.read()) + sc_biguint<10>(zext_ln40_fu_234_p1.read()));
}

void peak_detection::thread_add_ln700_fu_184_p2() {
    add_ln700_fu_184_p2 = (!ap_const_lv10_1.is_01() || !zext_ln112_fu_180_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(ap_const_lv10_1) + sc_biguint<10>(zext_ln112_fu_180_p1.read()));
}

void peak_detection::thread_add_ln891_fu_190_p2() {
    add_ln891_fu_190_p2 = (!ap_const_lv9_1.is_01() || !t_V_reg_142.read().is_01())? sc_lv<9>(): (sc_biguint<9>(ap_const_lv9_1) + sc_biguint<9>(t_V_reg_142.read()));
}

void peak_detection::thread_and_ln43_1_fu_414_p2() {
    and_ln43_1_fu_414_p2 = (and_ln43_fu_409_p2.read() & grp_fu_165_p2.read());
}

void peak_detection::thread_and_ln43_2_fu_424_p2() {
    and_ln43_2_fu_424_p2 = (or_ln43_reg_491.read() & or_ln43_2_fu_420_p2.read());
}

void peak_detection::thread_and_ln43_3_fu_429_p2() {
    and_ln43_3_fu_429_p2 = (and_ln43_2_fu_424_p2.read() & grp_fu_170_p2.read());
}

void peak_detection::thread_and_ln43_fu_409_p2() {
    and_ln43_fu_409_p2 = (or_ln43_reg_491.read() & or_ln43_1_fu_405_p2.read());
}

void peak_detection::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void peak_detection::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void peak_detection::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void peak_detection::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void peak_detection::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void peak_detection::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void peak_detection::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void peak_detection::thread_ap_block_state2() {
    ap_block_state2 = (esl_seteq<1,1,1>(tmp_nbreadreq_fu_90_p3.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, in_V_TVALID.read()));
}

void peak_detection::thread_ap_block_state3() {
    ap_block_state3 = (esl_seteq<1,1,1>(icmp_ln40_fu_238_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, peak_loc_stream_V_V_full_n.read()));
}

void peak_detection::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(tmp_nbreadreq_fu_90_p3.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, in_V_TVALID.read())) && 
         esl_seteq<1,1,1>(tmp_nbreadreq_fu_90_p3.read(), ap_const_lv1_0))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void peak_detection::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void peak_detection::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void peak_detection::thread_bitcast_ln43_1_fu_345_p1() {
    bitcast_ln43_1_fu_345_p1 = buf_buffer_q0.read();
}

void peak_detection::thread_bitcast_ln43_2_fu_375_p1() {
    bitcast_ln43_2_fu_375_p1 = buf_buffer_q1.read();
}

void peak_detection::thread_bitcast_ln43_fu_220_p1() {
    bitcast_ln43_fu_220_p1 = in_V_TDATA.read();
}

void peak_detection::thread_buf_buffer_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        buf_buffer_address0 =  (sc_lv<9>) (zext_ln544_1_fu_336_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        buf_buffer_address0 =  (sc_lv<9>) (zext_ln544_fu_175_p1.read());
    } else {
        buf_buffer_address0 = "XXXXXXXXX";
    }
}

void peak_detection::thread_buf_buffer_address1() {
    buf_buffer_address1 =  (sc_lv<9>) (sext_ln544_fu_341_p1.read());
}

void peak_detection::thread_buf_buffer_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          !(esl_seteq<1,1,1>(tmp_nbreadreq_fu_90_p3.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, in_V_TVALID.read()))) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        buf_buffer_ce0 = ap_const_logic_1;
    } else {
        buf_buffer_ce0 = ap_const_logic_0;
    }
}

void peak_detection::thread_buf_buffer_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        buf_buffer_ce1 = ap_const_logic_1;
    } else {
        buf_buffer_ce1 = ap_const_logic_0;
    }
}

void peak_detection::thread_buf_buffer_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(tmp_nbreadreq_fu_90_p3.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(tmp_nbreadreq_fu_90_p3.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, in_V_TVALID.read())))) {
        buf_buffer_we0 = ap_const_logic_1;
    } else {
        buf_buffer_we0 = ap_const_logic_0;
    }
}

void peak_detection::thread_buf_wr_ptr_V_fu_204_p3() {
    buf_wr_ptr_V_fu_204_p3 = (!tmp_2_fu_196_p3.read()[0].is_01())? sc_lv<9>(): ((tmp_2_fu_196_p3.read()[0].to_bool())? ap_const_lv9_0: add_ln891_fu_190_p2.read());
}

void peak_detection::thread_i_fu_441_p2() {
    i_fu_441_p2 = (!i_0_reg_153.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(i_0_reg_153.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void peak_detection::thread_icmp_ln40_fu_238_p2() {
    icmp_ln40_fu_238_p2 = (!i_0_reg_153.read().is_01() || !ap_const_lv7_6F.is_01())? sc_lv<1>(): (sc_biguint<7>(i_0_reg_153.read()) < sc_biguint<7>(ap_const_lv7_6F));
}

void peak_detection::thread_icmp_ln43_1_fu_228_p2() {
    icmp_ln43_1_fu_228_p2 = (!trunc_ln43_fu_224_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln43_fu_224_p1.read() == ap_const_lv23_0);
}

void peak_detection::thread_icmp_ln43_2_fu_363_p2() {
    icmp_ln43_2_fu_363_p2 = (!tmp_4_fu_349_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_4_fu_349_p4.read() != ap_const_lv8_FF);
}

void peak_detection::thread_icmp_ln43_3_fu_369_p2() {
    icmp_ln43_3_fu_369_p2 = (!trunc_ln43_1_fu_359_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln43_1_fu_359_p1.read() == ap_const_lv23_0);
}

void peak_detection::thread_icmp_ln43_4_fu_393_p2() {
    icmp_ln43_4_fu_393_p2 = (!tmp_7_fu_379_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_7_fu_379_p4.read() != ap_const_lv8_FF);
}

void peak_detection::thread_icmp_ln43_5_fu_399_p2() {
    icmp_ln43_5_fu_399_p2 = (!trunc_ln43_2_fu_389_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln43_2_fu_389_p1.read() == ap_const_lv23_0);
}

void peak_detection::thread_icmp_ln43_fu_325_p2() {
    icmp_ln43_fu_325_p2 = (!tmp_3_fu_316_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_3_fu_316_p4.read() != ap_const_lv8_FF);
}

void peak_detection::thread_in_V_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(tmp_nbreadreq_fu_90_p3.read(), ap_const_lv1_1))) {
        in_V_TDATA_blk_n = in_V_TVALID.read();
    } else {
        in_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void peak_detection::thread_in_V_TREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(tmp_nbreadreq_fu_90_p3.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(tmp_nbreadreq_fu_90_p3.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, in_V_TVALID.read())))) {
        in_V_TREADY = ap_const_logic_1;
    } else {
        in_V_TREADY = ap_const_logic_0;
    }
}

void peak_detection::thread_internal_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(tmp_nbreadreq_fu_90_p3.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, in_V_TVALID.read())) && 
         esl_seteq<1,1,1>(tmp_nbreadreq_fu_90_p3.read(), ap_const_lv1_0))) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void peak_detection::thread_or_ln43_1_fu_405_p2() {
    or_ln43_1_fu_405_p2 = (icmp_ln43_3_reg_522.read() | icmp_ln43_2_reg_517.read());
}

void peak_detection::thread_or_ln43_2_fu_420_p2() {
    or_ln43_2_fu_420_p2 = (icmp_ln43_5_reg_532.read() | icmp_ln43_4_reg_527.read());
}

void peak_detection::thread_or_ln43_3_fu_435_p2() {
    or_ln43_3_fu_435_p2 = (and_ln43_1_fu_414_p2.read() | and_ln43_3_fu_429_p2.read());
}

void peak_detection::thread_or_ln43_fu_331_p2() {
    or_ln43_fu_331_p2 = (icmp_ln43_1_reg_477.read() | icmp_ln43_fu_325_p2.read());
}

void peak_detection::thread_p_and_f_fu_276_p3() {
    p_and_f_fu_276_p3 = esl_concat<2,9>(ap_const_lv2_0, trunc_ln1372_fu_272_p1.read());
}

void peak_detection::thread_p_and_t_fu_294_p3() {
    p_and_t_fu_294_p3 = esl_concat<2,9>(ap_const_lv2_0, sub_ln1372_fu_288_p2.read());
}

void peak_detection::thread_peak_loc_stream_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln40_fu_238_p2.read(), ap_const_lv1_0))) {
        peak_loc_stream_V_V_blk_n = peak_loc_stream_V_V_full_n.read();
    } else {
        peak_loc_stream_V_V_blk_n = ap_const_logic_1;
    }
}

void peak_detection::thread_peak_loc_stream_V_V_din() {
    peak_loc_stream_V_V_din = tmp_V_1_reg_461.read();
}

void peak_detection::thread_peak_loc_stream_V_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln40_fu_238_p2.read(), ap_const_lv1_0) && 
         !(esl_seteq<1,1,1>(icmp_ln40_fu_238_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, peak_loc_stream_V_V_full_n.read())))) {
        peak_loc_stream_V_V_write = ap_const_logic_1;
    } else {
        peak_loc_stream_V_V_write = ap_const_logic_0;
    }
}

void peak_detection::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void peak_detection::thread_ret_V_1_fu_258_p2() {
    ret_V_1_fu_258_p2 = (!ap_const_lv11_200.is_01() || !ret_V_fu_253_p2.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_200) + sc_biguint<11>(ret_V_fu_253_p2.read()));
}

void peak_detection::thread_ret_V_fu_253_p2() {
    ret_V_fu_253_p2 = (!zext_ln215_reg_467.read().is_01() || !zext_ln215_1_fu_249_p1.read().is_01())? sc_lv<11>(): (sc_biguint<11>(zext_ln215_reg_467.read()) - sc_biguint<11>(zext_ln215_1_fu_249_p1.read()));
}

void peak_detection::thread_select_ln1372_fu_308_p3() {
    select_ln1372_fu_308_p3 = (!tmp_6_fu_264_p3.read()[0].is_01())? sc_lv<11>(): ((tmp_6_fu_264_p3.read()[0].to_bool())? sub_ln1372_1_fu_302_p2.read(): p_and_f_fu_276_p3.read());
}

void peak_detection::thread_sext_ln544_fu_341_p1() {
    sext_ln544_fu_341_p1 = esl_sext<64,11>(select_ln1372_reg_486.read());
}

void peak_detection::thread_start_out() {
    start_out = real_start.read();
}

void peak_detection::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void peak_detection::thread_sub_ln1372_1_fu_302_p2() {
    sub_ln1372_1_fu_302_p2 = (!ap_const_lv11_0.is_01() || !p_and_t_fu_294_p3.read().is_01())? sc_lv<11>(): (sc_biguint<11>(ap_const_lv11_0) - sc_biguint<11>(p_and_t_fu_294_p3.read()));
}

void peak_detection::thread_sub_ln1372_fu_288_p2() {
    sub_ln1372_fu_288_p2 = (!ap_const_lv9_0.is_01() || !trunc_ln1372_1_fu_284_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(ap_const_lv9_0) - sc_biguint<9>(trunc_ln1372_1_fu_284_p1.read()));
}

void peak_detection::thread_tmp_2_fu_196_p3() {
    tmp_2_fu_196_p3 = add_ln700_fu_184_p2.read().range(9, 9);
}

void peak_detection::thread_tmp_3_fu_316_p4() {
    tmp_3_fu_316_p4 = bitcast_ln43_reg_472.read().range(30, 23);
}

void peak_detection::thread_tmp_4_fu_349_p4() {
    tmp_4_fu_349_p4 = bitcast_ln43_1_fu_345_p1.read().range(30, 23);
}

void peak_detection::thread_tmp_6_fu_264_p3() {
    tmp_6_fu_264_p3 = ret_V_1_fu_258_p2.read().range(10, 10);
}

void peak_detection::thread_tmp_7_fu_379_p4() {
    tmp_7_fu_379_p4 = bitcast_ln43_2_fu_375_p1.read().range(30, 23);
}

void peak_detection::thread_tmp_V_1_fu_212_p1() {
    tmp_V_1_fu_212_p1 = esl_zext<10,9>(buf_wr_ptr_V_fu_204_p3.read());
}

void peak_detection::thread_tmp_nbreadreq_fu_90_p3() {
    tmp_nbreadreq_fu_90_p3 =  (sc_lv<1>) ((in_V_TVALID.read()));
}

void peak_detection::thread_trunc_ln1372_1_fu_284_p1() {
    trunc_ln1372_1_fu_284_p1 = ret_V_fu_253_p2.read().range(9-1, 0);
}

void peak_detection::thread_trunc_ln1372_fu_272_p1() {
    trunc_ln1372_fu_272_p1 = ret_V_1_fu_258_p2.read().range(9-1, 0);
}

void peak_detection::thread_trunc_ln43_1_fu_359_p1() {
    trunc_ln43_1_fu_359_p1 = bitcast_ln43_1_fu_345_p1.read().range(23-1, 0);
}

void peak_detection::thread_trunc_ln43_2_fu_389_p1() {
    trunc_ln43_2_fu_389_p1 = bitcast_ln43_2_fu_375_p1.read().range(23-1, 0);
}

void peak_detection::thread_trunc_ln43_fu_224_p1() {
    trunc_ln43_fu_224_p1 = bitcast_ln43_fu_220_p1.read().range(23-1, 0);
}

void peak_detection::thread_zext_ln112_fu_180_p1() {
    zext_ln112_fu_180_p1 = esl_zext<10,9>(t_V_reg_142.read());
}

void peak_detection::thread_zext_ln215_1_fu_249_p1() {
    zext_ln215_1_fu_249_p1 = esl_zext<11,10>(add_ln42_fu_244_p2.read());
}

void peak_detection::thread_zext_ln215_fu_216_p1() {
    zext_ln215_fu_216_p1 = esl_zext<11,9>(buf_wr_ptr_V_fu_204_p3.read());
}

void peak_detection::thread_zext_ln40_fu_234_p1() {
    zext_ln40_fu_234_p1 = esl_zext<10,7>(i_0_reg_153.read());
}

void peak_detection::thread_zext_ln544_1_fu_336_p1() {
    zext_ln544_1_fu_336_p1 = esl_zext<64,7>(i_0_reg_153.read());
}

void peak_detection::thread_zext_ln544_fu_175_p1() {
    zext_ln544_fu_175_p1 = esl_zext<64,9>(t_V_reg_142.read());
}

void peak_detection::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !(esl_seteq<1,1,1>(tmp_nbreadreq_fu_90_p3.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, in_V_TVALID.read())) && esl_seteq<1,1,1>(tmp_nbreadreq_fu_90_p3.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(tmp_nbreadreq_fu_90_p3.read(), ap_const_lv1_1) && !(esl_seteq<1,1,1>(tmp_nbreadreq_fu_90_p3.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, in_V_TVALID.read())))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln40_fu_238_p2.read(), ap_const_lv1_0) && !(esl_seteq<1,1,1>(icmp_ln40_fu_238_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, peak_loc_stream_V_V_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && !(esl_seteq<1,1,1>(icmp_ln40_fu_238_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, peak_loc_stream_V_V_full_n.read())) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln40_fu_238_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && (esl_seteq<1,1,1>(ap_const_lv1_1, or_ln43_3_fu_435_p2.read()) || 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln40_reg_482.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<6>) ("XXXXXX");
            break;
    }
}

}

