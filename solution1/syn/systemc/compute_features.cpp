// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "compute_features.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic compute_features::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic compute_features::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<53> compute_features::ap_ST_fsm_state1 = "1";
const sc_lv<53> compute_features::ap_ST_fsm_state2 = "10";
const sc_lv<53> compute_features::ap_ST_fsm_state3 = "100";
const sc_lv<53> compute_features::ap_ST_fsm_state4 = "1000";
const sc_lv<53> compute_features::ap_ST_fsm_state5 = "10000";
const sc_lv<53> compute_features::ap_ST_fsm_state6 = "100000";
const sc_lv<53> compute_features::ap_ST_fsm_state7 = "1000000";
const sc_lv<53> compute_features::ap_ST_fsm_state8 = "10000000";
const sc_lv<53> compute_features::ap_ST_fsm_state9 = "100000000";
const sc_lv<53> compute_features::ap_ST_fsm_state10 = "1000000000";
const sc_lv<53> compute_features::ap_ST_fsm_state11 = "10000000000";
const sc_lv<53> compute_features::ap_ST_fsm_state12 = "100000000000";
const sc_lv<53> compute_features::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<53> compute_features::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<53> compute_features::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<53> compute_features::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<53> compute_features::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<53> compute_features::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<53> compute_features::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<53> compute_features::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<53> compute_features::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<53> compute_features::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<53> compute_features::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<53> compute_features::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<53> compute_features::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<53> compute_features::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<53> compute_features::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<53> compute_features::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<53> compute_features::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<53> compute_features::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<53> compute_features::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<53> compute_features::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<53> compute_features::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<53> compute_features::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<53> compute_features::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<53> compute_features::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<53> compute_features::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<53> compute_features::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<53> compute_features::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<53> compute_features::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<53> compute_features::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<53> compute_features::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<53> compute_features::ap_ST_fsm_state43 = "1000000000000000000000000000000000000000000";
const sc_lv<53> compute_features::ap_ST_fsm_state44 = "10000000000000000000000000000000000000000000";
const sc_lv<53> compute_features::ap_ST_fsm_state45 = "100000000000000000000000000000000000000000000";
const sc_lv<53> compute_features::ap_ST_fsm_state46 = "1000000000000000000000000000000000000000000000";
const sc_lv<53> compute_features::ap_ST_fsm_state47 = "10000000000000000000000000000000000000000000000";
const sc_lv<53> compute_features::ap_ST_fsm_state48 = "100000000000000000000000000000000000000000000000";
const sc_lv<53> compute_features::ap_ST_fsm_state49 = "1000000000000000000000000000000000000000000000000";
const sc_lv<53> compute_features::ap_ST_fsm_state50 = "10000000000000000000000000000000000000000000000000";
const sc_lv<53> compute_features::ap_ST_fsm_state51 = "100000000000000000000000000000000000000000000000000";
const sc_lv<53> compute_features::ap_ST_fsm_state52 = "1000000000000000000000000000000000000000000000000000";
const sc_lv<53> compute_features::ap_ST_fsm_state53 = "10000000000000000000000000000000000000000000000000000";
const sc_lv<32> compute_features::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> compute_features::ap_const_lv1_0 = "0";
const sc_lv<1> compute_features::ap_const_lv1_1 = "1";
const sc_lv<2> compute_features::ap_const_lv2_0 = "00";
const sc_lv<2> compute_features::ap_const_lv2_2 = "10";
const sc_lv<2> compute_features::ap_const_lv2_3 = "11";
const sc_lv<2> compute_features::ap_const_lv2_1 = "1";
const sc_lv<32> compute_features::ap_const_lv32_1 = "1";
const sc_lv<32> compute_features::ap_const_lv32_28 = "101000";
const sc_lv<32> compute_features::ap_const_lv32_29 = "101001";
const sc_lv<32> compute_features::ap_const_lv32_2E = "101110";
const sc_lv<32> compute_features::ap_const_lv32_2F = "101111";
const sc_lv<32> compute_features::ap_const_lv32_32 = "110010";
const sc_lv<32> compute_features::ap_const_lv32_33 = "110011";
const sc_lv<32> compute_features::ap_const_lv32_34 = "110100";
const sc_lv<32> compute_features::ap_const_lv32_3 = "11";
const sc_lv<32> compute_features::ap_const_lv32_B = "1011";
const sc_lv<32> compute_features::ap_const_lv32_13 = "10011";
const sc_lv<32> compute_features::ap_const_lv32_1B = "11011";
const sc_lv<32> compute_features::ap_const_lv32_7 = "111";
const sc_lv<32> compute_features::ap_const_lv32_1F = "11111";
const sc_lv<32> compute_features::ap_const_lv32_10 = "10000";
const sc_lv<32> compute_features::ap_const_lv32_18 = "11000";
const sc_lv<32> compute_features::ap_const_lv32_22 = "100010";
const sc_lv<32> compute_features::ap_const_lv32_2C = "101100";
const sc_lv<32> compute_features::ap_const_lv32_30 = "110000";
const sc_lv<32> compute_features::ap_const_lv32_2 = "10";
const sc_lv<32> compute_features::ap_const_lv32_9 = "1001";
const sc_lv<32> compute_features::ap_const_lv32_A = "1010";
const sc_lv<32> compute_features::ap_const_lv32_C = "1100";
const sc_lv<32> compute_features::ap_const_lv32_11 = "10001";
const sc_lv<32> compute_features::ap_const_lv32_12 = "10010";
const sc_lv<32> compute_features::ap_const_lv32_14 = "10100";
const sc_lv<32> compute_features::ap_const_lv32_19 = "11001";
const sc_lv<32> compute_features::ap_const_lv32_1A = "11010";
const sc_lv<32> compute_features::ap_const_lv32_26 = "100110";
const sc_lv<32> compute_features::ap_const_lv32_27 = "100111";
const sc_lv<32> compute_features::ap_const_lv32_2B = "101011";
const sc_lv<32> compute_features::ap_const_lv32_31 = "110001";
const sc_lv<8> compute_features::ap_const_lv8_0 = "00000000";
const sc_lv<32> compute_features::ap_const_lv32_8 = "1000";
const sc_lv<8> compute_features::ap_const_lv8_64 = "1100100";
const sc_lv<7> compute_features::ap_const_lv7_14 = "10100";
const sc_lv<32> compute_features::ap_const_lv32_C2CA0000 = "11000010110010100000000000000000";
const sc_lv<32> compute_features::ap_const_lv32_4 = "100";
const sc_lv<32> compute_features::ap_const_lv32_1C = "11100";
const sc_lv<32> compute_features::ap_const_lv32_23 = "100011";
const sc_lv<32> compute_features::ap_const_lv32_40800000 = "1000000100000000000000000000000";
const sc_lv<32> compute_features::ap_const_lv32_3F000000 = "111111000000000000000000000000";
const sc_lv<32> compute_features::ap_const_lv32_20 = "100000";
const sc_lv<32> compute_features::ap_const_lv32_D = "1101";
const sc_lv<32> compute_features::ap_const_lv32_15 = "10101";
const sc_lv<32> compute_features::ap_const_lv32_2D = "101101";
const sc_lv<32> compute_features::ap_const_lv32_2A = "101010";
const sc_lv<64> compute_features::ap_const_lv64_BFBB089A02752546 = "1011111110111011000010001001101000000010011101010010010101000110";
const sc_lv<64> compute_features::ap_const_lv64_405B189BF162AE4B = "100000001011011000110001001101111110001011000101010111001001011";
const sc_lv<64> compute_features::ap_const_lv64_3F847AE147AE147B = "11111110000100011110101110000101000111101011100001010001111011";
const sc_lv<64> compute_features::ap_const_lv64_3FA999999999999A = "11111110101001100110011001100110011001100110011001100110011010";
const sc_lv<8> compute_features::ap_const_lv8_C8 = "11001000";
const sc_lv<8> compute_features::ap_const_lv8_1 = "1";
const sc_lv<8> compute_features::ap_const_lv8_C7 = "11000111";
const sc_lv<32> compute_features::ap_const_lv32_17 = "10111";
const sc_lv<32> compute_features::ap_const_lv32_1E = "11110";
const sc_lv<9> compute_features::ap_const_lv9_181 = "110000001";
const sc_lv<8> compute_features::ap_const_lv8_7F = "1111111";
const sc_lv<32> compute_features::ap_const_lv32_37 = "110111";
const sc_lv<8> compute_features::ap_const_lv8_FF = "11111111";
const sc_lv<23> compute_features::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<7> compute_features::ap_const_lv7_63 = "1100011";
const sc_lv<7> compute_features::ap_const_lv7_1 = "1";
const sc_lv<32> compute_features::ap_const_lv32_80000000 = "10000000000000000000000000000000";
const sc_lv<32> compute_features::ap_const_lv32_5 = "101";
const sc_lv<32> compute_features::ap_const_lv32_6 = "110";
const sc_lv<32> compute_features::ap_const_lv32_1D = "11101";
const sc_lv<32> compute_features::ap_const_lv32_24 = "100100";
const sc_lv<32> compute_features::ap_const_lv32_25 = "100101";
const sc_lv<32> compute_features::ap_const_lv32_21 = "100001";
const sc_lv<5> compute_features::ap_const_lv5_2 = "10";
const sc_lv<5> compute_features::ap_const_lv5_4 = "100";
const bool compute_features::ap_const_boolean_1 = true;

compute_features::compute_features(sc_module_name name) : sc_module(name), mVcdFile(0) {
    buffer_U = new compute_features_jbC("buffer_U");
    buffer_U->clk(ap_clk);
    buffer_U->reset(ap_rst);
    buffer_U->address0(buffer_address0);
    buffer_U->ce0(buffer_ce0);
    buffer_U->we0(buffer_we0);
    buffer_U->d0(normalized_in_V_dout);
    buffer_U->q0(buffer_q0);
    buffer_U->address1(buffer_address1);
    buffer_U->ce1(buffer_ce1);
    buffer_U->q1(buffer_q1);
    diff1_U = new compute_features_kbM("diff1_U");
    diff1_U->clk(ap_clk);
    diff1_U->reset(ap_rst);
    diff1_U->address0(diff1_address0);
    diff1_U->ce0(diff1_ce0);
    diff1_U->we0(diff1_we0);
    diff1_U->d0(reg_398);
    diff1_U->q0(diff1_q0);
    feature_extractoreOg_U20 = new feature_extractoreOg<1,4,32,32,32>("feature_extractoreOg_U20");
    feature_extractoreOg_U20->clk(ap_clk);
    feature_extractoreOg_U20->reset(ap_rst);
    feature_extractoreOg_U20->din0(grp_fu_333_p0);
    feature_extractoreOg_U20->din1(grp_fu_333_p1);
    feature_extractoreOg_U20->opcode(grp_fu_333_opcode);
    feature_extractoreOg_U20->ce(grp_fu_333_ce);
    feature_extractoreOg_U20->dout(grp_fu_333_p2);
    feature_extractorg8j_U21 = new feature_extractorg8j<1,3,32,32,32>("feature_extractorg8j_U21");
    feature_extractorg8j_U21->clk(ap_clk);
    feature_extractorg8j_U21->reset(ap_rst);
    feature_extractorg8j_U21->din0(grp_fu_340_p0);
    feature_extractorg8j_U21->din1(grp_fu_340_p1);
    feature_extractorg8j_U21->ce(grp_fu_340_ce);
    feature_extractorg8j_U21->dout(grp_fu_340_p2);
    feature_extractorlbW_U22 = new feature_extractorlbW<1,4,32,32>("feature_extractorlbW_U22");
    feature_extractorlbW_U22->clk(ap_clk);
    feature_extractorlbW_U22->reset(ap_rst);
    feature_extractorlbW_U22->din0(grp_fu_348_p0);
    feature_extractorlbW_U22->ce(ap_var_for_const0);
    feature_extractorlbW_U22->dout(grp_fu_348_p1);
    feature_extractormb6_U23 = new feature_extractormb6<1,2,64,32>("feature_extractormb6_U23");
    feature_extractormb6_U23->clk(ap_clk);
    feature_extractormb6_U23->reset(ap_rst);
    feature_extractormb6_U23->din0(grp_fu_352_p0);
    feature_extractormb6_U23->ce(grp_fu_352_ce);
    feature_extractormb6_U23->dout(grp_fu_352_p1);
    feature_extractorncg_U24 = new feature_extractorncg<1,2,32,64>("feature_extractorncg_U24");
    feature_extractorncg_U24->clk(ap_clk);
    feature_extractorncg_U24->reset(ap_rst);
    feature_extractorncg_U24->din0(grp_fu_356_p0);
    feature_extractorncg_U24->ce(ap_var_for_const0);
    feature_extractorncg_U24->dout(grp_fu_356_p1);
    feature_extractorncg_U25 = new feature_extractorncg<1,2,32,64>("feature_extractorncg_U25");
    feature_extractorncg_U25->clk(ap_clk);
    feature_extractorncg_U25->reset(ap_rst);
    feature_extractorncg_U25->din0(p_0_0_reg_321);
    feature_extractorncg_U25->ce(ap_var_for_const0);
    feature_extractorncg_U25->dout(grp_fu_359_p1);
    feature_extractorcud_U26 = new feature_extractorcud<1,2,32,32,1>("feature_extractorcud_U26");
    feature_extractorcud_U26->clk(ap_clk);
    feature_extractorcud_U26->reset(ap_rst);
    feature_extractorcud_U26->din0(grp_fu_363_p0);
    feature_extractorcud_U26->din1(grp_fu_363_p1);
    feature_extractorcud_U26->ce(ap_var_for_const0);
    feature_extractorcud_U26->opcode(grp_fu_363_opcode);
    feature_extractorcud_U26->dout(grp_fu_363_p2);
    feature_extractorocq_U27 = new feature_extractorocq<1,5,64,64,64>("feature_extractorocq_U27");
    feature_extractorocq_U27->clk(ap_clk);
    feature_extractorocq_U27->reset(ap_rst);
    feature_extractorocq_U27->din0(tmp_9_reg_1120);
    feature_extractorocq_U27->din1(ap_var_for_const1);
    feature_extractorocq_U27->ce(grp_fu_372_ce);
    feature_extractorocq_U27->dout(grp_fu_372_p2);
    feature_extractorpcA_U28 = new feature_extractorpcA<1,5,64,64,64>("feature_extractorpcA_U28");
    feature_extractorpcA_U28->clk(ap_clk);
    feature_extractorpcA_U28->reset(ap_rst);
    feature_extractorpcA_U28->din0(grp_fu_377_p0);
    feature_extractorpcA_U28->din1(grp_fu_377_p1);
    feature_extractorpcA_U28->ce(grp_fu_377_ce);
    feature_extractorpcA_U28->dout(grp_fu_377_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln339_fu_519_p2);
    sensitive << ( zext_ln339_fu_515_p1 );

    SC_METHOD(thread_aip_1_fu_879_p3);
    sensitive << ( reg_384 );
    sensitive << ( p_012_0_reg_286 );
    sensitive << ( and_ln130_1_fu_866_p2 );

    SC_METHOD(thread_and_ln124_1_fu_708_p2);
    sensitive << ( and_ln124_fu_702_p2 );
    sensitive << ( grp_fu_363_p2 );

    SC_METHOD(thread_and_ln124_fu_702_p2);
    sensitive << ( or_ln124_fu_694_p2 );
    sensitive << ( or_ln124_1_fu_698_p2 );

    SC_METHOD(thread_and_ln130_1_fu_866_p2);
    sensitive << ( grp_fu_363_p2 );
    sensitive << ( and_ln130_fu_860_p2 );

    SC_METHOD(thread_and_ln130_fu_860_p2);
    sensitive << ( or_ln130_fu_836_p2 );
    sensitive << ( or_ln130_1_fu_854_p2 );

    SC_METHOD(thread_and_ln138_1_fu_926_p2);
    sensitive << ( grp_fu_363_p2 );
    sensitive << ( and_ln138_fu_921_p2 );

    SC_METHOD(thread_and_ln138_fu_921_p2);
    sensitive << ( or_ln138_1_reg_1060 );
    sensitive << ( or_ln138_fu_917_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state32);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state33);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state34);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state35);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state36);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state37);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state38);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state39);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state40);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state41);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state42);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state43);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state44);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state45);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state46);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state47);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state48);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state49);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state50);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state51);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state52);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state53);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state2);
    sensitive << ( normalized_in_V_empty_n );
    sensitive << ( icmp_ln108_fu_426_p2 );

    SC_METHOD(thread_ap_block_state53);
    sensitive << ( features_out_V_TREADY );
    sensitive << ( features_out_V_1_state );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( features_out_V_TREADY );
    sensitive << ( features_out_V_1_ack_in );
    sensitive << ( features_out_V_1_state );
    sensitive << ( ap_CS_fsm_state53 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( features_out_V_TREADY );
    sensitive << ( features_out_V_1_ack_in );
    sensitive << ( features_out_V_1_state );
    sensitive << ( ap_CS_fsm_state53 );

    SC_METHOD(thread_bitcast_ln124_1_fu_652_p1);
    sensitive << ( buffer_q0 );

    SC_METHOD(thread_bitcast_ln124_fu_634_p1);
    sensitive << ( buffer_q1 );

    SC_METHOD(thread_bitcast_ln130_1_fu_806_p1);
    sensitive << ( p_014_0_reg_274 );

    SC_METHOD(thread_bitcast_ln130_fu_789_p1);
    sensitive << ( slope_ip_1_reg_1065 );

    SC_METHOD(thread_bitcast_ln135_fu_739_p1);
    sensitive << ( p_014_0_reg_274 );

    SC_METHOD(thread_bitcast_ln138_1_fu_753_p1);
    sensitive << ( x_assign_reg_250 );

    SC_METHOD(thread_bitcast_ln138_fu_887_p1);
    sensitive << ( reg_405 );

    SC_METHOD(thread_buffer_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( zext_ln109_fu_438_p1 );
    sensitive << ( zext_ln115_fu_455_p1 );
    sensitive << ( sext_ln124_fu_624_p1 );
    sensitive << ( sext_ln139_fu_938_p1 );

    SC_METHOD(thread_buffer_address1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln115_1_fu_460_p1 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( zext_ln124_fu_619_p1 );
    sensitive << ( zext_ln130_fu_727_p1 );
    sensitive << ( sext_ln139_1_fu_943_p1 );

    SC_METHOD(thread_buffer_ce0);
    sensitive << ( normalized_in_V_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln108_fu_426_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state27 );

    SC_METHOD(thread_buffer_ce1);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state27 );

    SC_METHOD(thread_buffer_we0);
    sensitive << ( normalized_in_V_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln108_fu_426_p2 );

    SC_METHOD(thread_diff1_address0);
    sensitive << ( zext_ln115_1_reg_969 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( zext_ln130_fu_727_p1 );

    SC_METHOD(thread_diff1_ce0);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_diff1_we0);
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_features_out_V_1_ack_in);
    sensitive << ( features_out_V_1_state );

    SC_METHOD(thread_features_out_V_1_ack_out);
    sensitive << ( features_out_V_TREADY );

    SC_METHOD(thread_features_out_V_1_data_in);
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( grp_fu_340_p2 );
    sensitive << ( grp_fu_352_p1 );

    SC_METHOD(thread_features_out_V_1_data_out);
    sensitive << ( features_out_V_1_payload_A );
    sensitive << ( features_out_V_1_payload_B );
    sensitive << ( features_out_V_1_sel );

    SC_METHOD(thread_features_out_V_1_load_A);
    sensitive << ( features_out_V_1_sel_wr );
    sensitive << ( features_out_V_1_state_cmp_full );

    SC_METHOD(thread_features_out_V_1_load_B);
    sensitive << ( features_out_V_1_sel_wr );
    sensitive << ( features_out_V_1_state_cmp_full );

    SC_METHOD(thread_features_out_V_1_sel);
    sensitive << ( features_out_V_1_sel_rd );

    SC_METHOD(thread_features_out_V_1_state_cmp_full);
    sensitive << ( features_out_V_1_state );

    SC_METHOD(thread_features_out_V_1_vld_in);
    sensitive << ( features_out_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state52 );

    SC_METHOD(thread_features_out_V_1_vld_out);
    sensitive << ( features_out_V_1_state );

    SC_METHOD(thread_features_out_V_TDATA);
    sensitive << ( features_out_V_1_data_out );

    SC_METHOD(thread_features_out_V_TDATA_blk_n);
    sensitive << ( features_out_V_1_state );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( ap_CS_fsm_state53 );

    SC_METHOD(thread_features_out_V_TVALID);
    sensitive << ( features_out_V_1_state );

    SC_METHOD(thread_grp_fu_333_ce);
    sensitive << ( features_out_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state38 );

    SC_METHOD(thread_grp_fu_333_opcode);
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( and_ln138_1_fu_926_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_grp_fu_333_p0);
    sensitive << ( reg_384 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( x_assign_reg_250 );
    sensitive << ( p_0_0_reg_321 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_grp_fu_333_p1);
    sensitive << ( reg_391 );
    sensitive << ( reg_410 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state36 );

    SC_METHOD(thread_grp_fu_340_ce);
    sensitive << ( features_out_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state34 );

    SC_METHOD(thread_grp_fu_340_p0);
    sensitive << ( reg_398 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( p_012_0_reg_286 );
    sensitive << ( ap_CS_fsm_state33 );

    SC_METHOD(thread_grp_fu_340_p1);
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state33 );

    SC_METHOD(thread_grp_fu_348_p0);
    sensitive << ( zext_ln123_reg_979 );
    sensitive << ( i4_0_reg_309 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_grp_fu_352_ce);
    sensitive << ( features_out_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( ap_CS_fsm_state46 );

    SC_METHOD(thread_grp_fu_352_p0);
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( reg_416 );
    sensitive << ( tmp_11_reg_1135 );
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( ap_CS_fsm_state46 );

    SC_METHOD(thread_grp_fu_356_p0);
    sensitive << ( reg_398 );
    sensitive << ( slope_ip_reg_1055 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state43 );

    SC_METHOD(thread_grp_fu_363_opcode);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_grp_fu_363_p0);
    sensitive << ( buffer_q1 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( reg_405 );
    sensitive << ( diff1_q0 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_grp_fu_363_p1);
    sensitive << ( buffer_q0 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( x_assign_reg_250 );
    sensitive << ( p_014_0_reg_274 );

    SC_METHOD(thread_grp_fu_372_ce);
    sensitive << ( features_out_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state43 );

    SC_METHOD(thread_grp_fu_377_ce);
    sensitive << ( features_out_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state49 );
    sensitive << ( ap_CS_fsm_state44 );
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( ap_CS_fsm_state46 );
    sensitive << ( ap_CS_fsm_state43 );

    SC_METHOD(thread_grp_fu_377_p0);
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( tmp_5_reg_1115 );
    sensitive << ( tmp_2_reg_1125 );
    sensitive << ( tmp_10_reg_1130 );
    sensitive << ( ap_CS_fsm_state46 );

    SC_METHOD(thread_grp_fu_377_p1);
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state46 );

    SC_METHOD(thread_i_1_fu_449_p2);
    sensitive << ( i1_0_reg_239 );

    SC_METHOD(thread_i_2_fu_628_p2);
    sensitive << ( i2_0_reg_262 );

    SC_METHOD(thread_i_3_fu_733_p2);
    sensitive << ( i3_0_reg_298 );

    SC_METHOD(thread_i_4_fu_932_p2);
    sensitive << ( i4_0_reg_309 );

    SC_METHOD(thread_i_fu_432_p2);
    sensitive << ( i_0_reg_228 );

    SC_METHOD(thread_icmp_ln108_fu_426_p2);
    sensitive << ( normalized_in_V_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln108_fu_426_p2 );
    sensitive << ( i_0_reg_228 );

    SC_METHOD(thread_icmp_ln114_fu_443_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( i1_0_reg_239 );

    SC_METHOD(thread_icmp_ln123_fu_469_p2);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( i2_0_reg_262 );

    SC_METHOD(thread_icmp_ln124_1_fu_676_p2);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( trunc_ln124_fu_648_p1 );

    SC_METHOD(thread_icmp_ln124_2_fu_682_p2);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_13_fu_656_p4 );

    SC_METHOD(thread_icmp_ln124_3_fu_688_p2);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( trunc_ln124_1_fu_666_p1 );

    SC_METHOD(thread_icmp_ln124_fu_670_p2);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tmp_12_fu_638_p4 );

    SC_METHOD(thread_icmp_ln129_fu_721_p2);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( i3_0_reg_298 );

    SC_METHOD(thread_icmp_ln130_1_fu_830_p2);
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( trunc_ln130_fu_802_p1 );

    SC_METHOD(thread_icmp_ln130_2_fu_842_p2);
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( tmp_18_fu_810_p4 );

    SC_METHOD(thread_icmp_ln130_3_fu_848_p2);
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( trunc_ln130_1_fu_820_p1 );

    SC_METHOD(thread_icmp_ln130_fu_824_p2);
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( tmp_17_fu_792_p4 );

    SC_METHOD(thread_icmp_ln138_1_fu_911_p2);
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( trunc_ln138_1_fu_901_p1 );

    SC_METHOD(thread_icmp_ln138_2_fu_771_p2);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( icmp_ln129_fu_721_p2 );
    sensitive << ( tmp_16_fu_757_p4 );

    SC_METHOD(thread_icmp_ln138_3_fu_777_p2);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( icmp_ln129_fu_721_p2 );
    sensitive << ( trunc_ln138_fu_767_p1 );

    SC_METHOD(thread_icmp_ln138_fu_905_p2);
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( tmp_20_fu_891_p4 );

    SC_METHOD(thread_isNeg_fu_525_p3);
    sensitive << ( add_ln339_fu_519_p2 );

    SC_METHOD(thread_mantissa_V_fu_501_p4);
    sensitive << ( tmp_V_9_fu_497_p1 );

    SC_METHOD(thread_normalized_in_V_blk_n);
    sensitive << ( normalized_in_V_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln108_fu_426_p2 );

    SC_METHOD(thread_normalized_in_V_read);
    sensitive << ( normalized_in_V_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln108_fu_426_p2 );

    SC_METHOD(thread_or_ln124_1_fu_698_p2);
    sensitive << ( icmp_ln124_2_reg_1017 );
    sensitive << ( icmp_ln124_3_reg_1022 );

    SC_METHOD(thread_or_ln124_fu_694_p2);
    sensitive << ( icmp_ln124_reg_1007 );
    sensitive << ( icmp_ln124_1_reg_1012 );

    SC_METHOD(thread_or_ln130_1_fu_854_p2);
    sensitive << ( icmp_ln130_3_fu_848_p2 );
    sensitive << ( icmp_ln130_2_fu_842_p2 );

    SC_METHOD(thread_or_ln130_fu_836_p2);
    sensitive << ( icmp_ln130_1_fu_830_p2 );
    sensitive << ( icmp_ln130_fu_824_p2 );

    SC_METHOD(thread_or_ln138_1_fu_783_p2);
    sensitive << ( icmp_ln138_3_fu_777_p2 );
    sensitive << ( icmp_ln138_2_fu_771_p2 );

    SC_METHOD(thread_or_ln138_fu_917_p2);
    sensitive << ( icmp_ln138_reg_1082 );
    sensitive << ( icmp_ln138_1_reg_1087 );

    SC_METHOD(thread_p_Result_s_fu_479_p3);
    sensitive << ( p_Val2_s_fu_475_p1 );

    SC_METHOD(thread_p_Val2_11_fu_597_p3);
    sensitive << ( isNeg_fu_525_p3 );
    sensitive << ( zext_ln662_fu_583_p1 );
    sensitive << ( tmp_15_fu_587_p4 );

    SC_METHOD(thread_p_Val2_12_fu_611_p3);
    sensitive << ( p_Val2_11_fu_597_p3 );
    sensitive << ( p_Result_s_fu_479_p3 );
    sensitive << ( result_V_2_fu_605_p2 );

    SC_METHOD(thread_p_Val2_s_fu_475_p1);
    sensitive << ( x_assign_reg_250 );

    SC_METHOD(thread_r_V_2_fu_569_p2);
    sensitive << ( zext_ln682_fu_511_p1 );
    sensitive << ( zext_ln1287_fu_559_p1 );

    SC_METHOD(thread_r_V_fu_563_p2);
    sensitive << ( mantissa_V_fu_501_p4 );
    sensitive << ( sext_ln1311_3_fu_555_p1 );

    SC_METHOD(thread_result_V_2_fu_605_p2);
    sensitive << ( p_Val2_11_fu_597_p3 );

    SC_METHOD(thread_sext_ln124_fu_624_p1);
    sensitive << ( p_Val2_12_reg_987 );

    SC_METHOD(thread_sext_ln1311_2_fu_551_p1);
    sensitive << ( ush_fu_543_p3 );

    SC_METHOD(thread_sext_ln1311_3_fu_555_p1);
    sensitive << ( ush_fu_543_p3 );

    SC_METHOD(thread_sext_ln1311_fu_539_p1);
    sensitive << ( sub_ln1311_fu_533_p2 );

    SC_METHOD(thread_sext_ln139_1_fu_943_p1);
    sensitive << ( i_4_fu_932_p2 );

    SC_METHOD(thread_sext_ln139_fu_938_p1);
    sensitive << ( i4_0_reg_309 );

    SC_METHOD(thread_slope_ip_2_fu_872_p3);
    sensitive << ( slope_ip_1_reg_1065 );
    sensitive << ( p_014_0_reg_274 );
    sensitive << ( and_ln130_1_fu_866_p2 );

    SC_METHOD(thread_slope_ip_fu_749_p1);
    sensitive << ( xor_ln135_fu_743_p2 );

    SC_METHOD(thread_sub_ln1311_fu_533_p2);
    sensitive << ( tmp_V_fu_487_p4 );

    SC_METHOD(thread_tdia_1_fu_714_p3);
    sensitive << ( reg_405 );
    sensitive << ( and_ln124_1_reg_1027 );
    sensitive << ( x_assign_reg_250 );

    SC_METHOD(thread_tmp_12_fu_638_p4);
    sensitive << ( bitcast_ln124_fu_634_p1 );

    SC_METHOD(thread_tmp_13_fu_656_p4);
    sensitive << ( bitcast_ln124_1_fu_652_p1 );

    SC_METHOD(thread_tmp_15_fu_587_p4);
    sensitive << ( r_V_2_fu_569_p2 );

    SC_METHOD(thread_tmp_16_fu_757_p4);
    sensitive << ( bitcast_ln138_1_fu_753_p1 );

    SC_METHOD(thread_tmp_17_fu_792_p4);
    sensitive << ( bitcast_ln130_fu_789_p1 );

    SC_METHOD(thread_tmp_18_fu_810_p4);
    sensitive << ( bitcast_ln130_1_fu_806_p1 );

    SC_METHOD(thread_tmp_20_fu_891_p4);
    sensitive << ( bitcast_ln138_fu_887_p1 );

    SC_METHOD(thread_tmp_25_fu_575_p3);
    sensitive << ( r_V_fu_563_p2 );

    SC_METHOD(thread_tmp_V_9_fu_497_p1);
    sensitive << ( p_Val2_s_fu_475_p1 );

    SC_METHOD(thread_tmp_V_fu_487_p4);
    sensitive << ( p_Val2_s_fu_475_p1 );

    SC_METHOD(thread_trunc_ln124_1_fu_666_p1);
    sensitive << ( bitcast_ln124_1_fu_652_p1 );

    SC_METHOD(thread_trunc_ln124_fu_648_p1);
    sensitive << ( bitcast_ln124_fu_634_p1 );

    SC_METHOD(thread_trunc_ln130_1_fu_820_p1);
    sensitive << ( bitcast_ln130_1_fu_806_p1 );

    SC_METHOD(thread_trunc_ln130_fu_802_p1);
    sensitive << ( bitcast_ln130_fu_789_p1 );

    SC_METHOD(thread_trunc_ln138_1_fu_901_p1);
    sensitive << ( bitcast_ln138_fu_887_p1 );

    SC_METHOD(thread_trunc_ln138_fu_767_p1);
    sensitive << ( bitcast_ln138_1_fu_753_p1 );

    SC_METHOD(thread_ush_fu_543_p3);
    sensitive << ( add_ln339_fu_519_p2 );
    sensitive << ( isNeg_fu_525_p3 );
    sensitive << ( sext_ln1311_fu_539_p1 );

    SC_METHOD(thread_xor_ln135_fu_743_p2);
    sensitive << ( bitcast_ln135_fu_739_p1 );

    SC_METHOD(thread_zext_ln109_fu_438_p1);
    sensitive << ( i_0_reg_228 );

    SC_METHOD(thread_zext_ln115_1_fu_460_p1);
    sensitive << ( i1_0_reg_239 );

    SC_METHOD(thread_zext_ln115_fu_455_p1);
    sensitive << ( i_1_fu_449_p2 );

    SC_METHOD(thread_zext_ln123_fu_465_p1);
    sensitive << ( i2_0_reg_262 );

    SC_METHOD(thread_zext_ln124_fu_619_p1);
    sensitive << ( i2_0_reg_262 );

    SC_METHOD(thread_zext_ln1287_fu_559_p1);
    sensitive << ( sext_ln1311_2_fu_551_p1 );

    SC_METHOD(thread_zext_ln130_fu_727_p1);
    sensitive << ( i3_0_reg_298 );

    SC_METHOD(thread_zext_ln339_fu_515_p1);
    sensitive << ( tmp_V_fu_487_p4 );

    SC_METHOD(thread_zext_ln662_fu_583_p1);
    sensitive << ( tmp_25_fu_575_p3 );

    SC_METHOD(thread_zext_ln682_fu_511_p1);
    sensitive << ( mantissa_V_fu_501_p4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( normalized_in_V_empty_n );
    sensitive << ( features_out_V_TREADY );
    sensitive << ( features_out_V_1_ack_in );
    sensitive << ( features_out_V_1_state );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln108_fu_426_p2 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_CS_fsm_state48 );
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( ap_CS_fsm_state52 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln114_fu_443_p2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_ln123_fu_469_p2 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( icmp_ln129_fu_721_p2 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( and_ln138_1_fu_926_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "00000000000000000000000000000000000000000000000000001";
    features_out_V_1_sel_rd = SC_LOGIC_0;
    features_out_V_1_sel_wr = SC_LOGIC_0;
    features_out_V_1_state = "00";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "compute_features_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, normalized_in_V_dout, "(port)normalized_in_V_dout");
    sc_trace(mVcdFile, normalized_in_V_empty_n, "(port)normalized_in_V_empty_n");
    sc_trace(mVcdFile, normalized_in_V_read, "(port)normalized_in_V_read");
    sc_trace(mVcdFile, features_out_V_TDATA, "(port)features_out_V_TDATA");
    sc_trace(mVcdFile, features_out_V_TVALID, "(port)features_out_V_TVALID");
    sc_trace(mVcdFile, features_out_V_TREADY, "(port)features_out_V_TREADY");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, features_out_V_1_data_in, "features_out_V_1_data_in");
    sc_trace(mVcdFile, features_out_V_1_data_out, "features_out_V_1_data_out");
    sc_trace(mVcdFile, features_out_V_1_vld_in, "features_out_V_1_vld_in");
    sc_trace(mVcdFile, features_out_V_1_vld_out, "features_out_V_1_vld_out");
    sc_trace(mVcdFile, features_out_V_1_ack_in, "features_out_V_1_ack_in");
    sc_trace(mVcdFile, features_out_V_1_ack_out, "features_out_V_1_ack_out");
    sc_trace(mVcdFile, features_out_V_1_payload_A, "features_out_V_1_payload_A");
    sc_trace(mVcdFile, features_out_V_1_payload_B, "features_out_V_1_payload_B");
    sc_trace(mVcdFile, features_out_V_1_sel_rd, "features_out_V_1_sel_rd");
    sc_trace(mVcdFile, features_out_V_1_sel_wr, "features_out_V_1_sel_wr");
    sc_trace(mVcdFile, features_out_V_1_sel, "features_out_V_1_sel");
    sc_trace(mVcdFile, features_out_V_1_load_A, "features_out_V_1_load_A");
    sc_trace(mVcdFile, features_out_V_1_load_B, "features_out_V_1_load_B");
    sc_trace(mVcdFile, features_out_V_1_state, "features_out_V_1_state");
    sc_trace(mVcdFile, features_out_V_1_state_cmp_full, "features_out_V_1_state_cmp_full");
    sc_trace(mVcdFile, normalized_in_V_blk_n, "normalized_in_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_ln108_fu_426_p2, "icmp_ln108_fu_426_p2");
    sc_trace(mVcdFile, features_out_V_TDATA_blk_n, "features_out_V_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state41, "ap_CS_fsm_state41");
    sc_trace(mVcdFile, ap_CS_fsm_state42, "ap_CS_fsm_state42");
    sc_trace(mVcdFile, ap_CS_fsm_state47, "ap_CS_fsm_state47");
    sc_trace(mVcdFile, ap_CS_fsm_state48, "ap_CS_fsm_state48");
    sc_trace(mVcdFile, ap_CS_fsm_state51, "ap_CS_fsm_state51");
    sc_trace(mVcdFile, ap_CS_fsm_state52, "ap_CS_fsm_state52");
    sc_trace(mVcdFile, ap_CS_fsm_state53, "ap_CS_fsm_state53");
    sc_trace(mVcdFile, buffer_q0, "buffer_q0");
    sc_trace(mVcdFile, reg_384, "reg_384");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, buffer_q1, "buffer_q1");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, reg_391, "reg_391");
    sc_trace(mVcdFile, grp_fu_333_p2, "grp_fu_333_p2");
    sc_trace(mVcdFile, reg_398, "reg_398");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state32, "ap_CS_fsm_state32");
    sc_trace(mVcdFile, grp_fu_348_p1, "grp_fu_348_p1");
    sc_trace(mVcdFile, reg_405, "reg_405");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, and_ln124_1_reg_1027, "and_ln124_1_reg_1027");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, grp_fu_340_p2, "grp_fu_340_p2");
    sc_trace(mVcdFile, reg_410, "reg_410");
    sc_trace(mVcdFile, ap_CS_fsm_state35, "ap_CS_fsm_state35");
    sc_trace(mVcdFile, grp_fu_377_p2, "grp_fu_377_p2");
    sc_trace(mVcdFile, reg_416, "reg_416");
    sc_trace(mVcdFile, ap_CS_fsm_state45, "ap_CS_fsm_state45");
    sc_trace(mVcdFile, ap_CS_fsm_state49, "ap_CS_fsm_state49");
    sc_trace(mVcdFile, grp_fu_352_p1, "grp_fu_352_p1");
    sc_trace(mVcdFile, i_fu_432_p2, "i_fu_432_p2");
    sc_trace(mVcdFile, ap_block_state2, "ap_block_state2");
    sc_trace(mVcdFile, i_1_fu_449_p2, "i_1_fu_449_p2");
    sc_trace(mVcdFile, i_1_reg_959, "i_1_reg_959");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, icmp_ln114_fu_443_p2, "icmp_ln114_fu_443_p2");
    sc_trace(mVcdFile, zext_ln115_1_fu_460_p1, "zext_ln115_1_fu_460_p1");
    sc_trace(mVcdFile, zext_ln115_1_reg_969, "zext_ln115_1_reg_969");
    sc_trace(mVcdFile, zext_ln123_fu_465_p1, "zext_ln123_fu_465_p1");
    sc_trace(mVcdFile, zext_ln123_reg_979, "zext_ln123_reg_979");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, p_Val2_12_fu_611_p3, "p_Val2_12_fu_611_p3");
    sc_trace(mVcdFile, p_Val2_12_reg_987, "p_Val2_12_reg_987");
    sc_trace(mVcdFile, icmp_ln123_fu_469_p2, "icmp_ln123_fu_469_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, i_2_fu_628_p2, "i_2_fu_628_p2");
    sc_trace(mVcdFile, i_2_reg_1002, "i_2_reg_1002");
    sc_trace(mVcdFile, icmp_ln124_fu_670_p2, "icmp_ln124_fu_670_p2");
    sc_trace(mVcdFile, icmp_ln124_reg_1007, "icmp_ln124_reg_1007");
    sc_trace(mVcdFile, icmp_ln124_1_fu_676_p2, "icmp_ln124_1_fu_676_p2");
    sc_trace(mVcdFile, icmp_ln124_1_reg_1012, "icmp_ln124_1_reg_1012");
    sc_trace(mVcdFile, icmp_ln124_2_fu_682_p2, "icmp_ln124_2_fu_682_p2");
    sc_trace(mVcdFile, icmp_ln124_2_reg_1017, "icmp_ln124_2_reg_1017");
    sc_trace(mVcdFile, icmp_ln124_3_fu_688_p2, "icmp_ln124_3_fu_688_p2");
    sc_trace(mVcdFile, icmp_ln124_3_reg_1022, "icmp_ln124_3_reg_1022");
    sc_trace(mVcdFile, and_ln124_1_fu_708_p2, "and_ln124_1_fu_708_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, tdia_1_fu_714_p3, "tdia_1_fu_714_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, icmp_ln129_fu_721_p2, "icmp_ln129_fu_721_p2");
    sc_trace(mVcdFile, i_3_fu_733_p2, "i_3_fu_733_p2");
    sc_trace(mVcdFile, i_3_reg_1050, "i_3_reg_1050");
    sc_trace(mVcdFile, slope_ip_fu_749_p1, "slope_ip_fu_749_p1");
    sc_trace(mVcdFile, slope_ip_reg_1055, "slope_ip_reg_1055");
    sc_trace(mVcdFile, or_ln138_1_fu_783_p2, "or_ln138_1_fu_783_p2");
    sc_trace(mVcdFile, or_ln138_1_reg_1060, "or_ln138_1_reg_1060");
    sc_trace(mVcdFile, diff1_q0, "diff1_q0");
    sc_trace(mVcdFile, slope_ip_1_reg_1065, "slope_ip_1_reg_1065");
    sc_trace(mVcdFile, slope_ip_2_fu_872_p3, "slope_ip_2_fu_872_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, aip_1_fu_879_p3, "aip_1_fu_879_p3");
    sc_trace(mVcdFile, icmp_ln138_fu_905_p2, "icmp_ln138_fu_905_p2");
    sc_trace(mVcdFile, icmp_ln138_reg_1082, "icmp_ln138_reg_1082");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, icmp_ln138_1_fu_911_p2, "icmp_ln138_1_fu_911_p2");
    sc_trace(mVcdFile, icmp_ln138_1_reg_1087, "icmp_ln138_1_reg_1087");
    sc_trace(mVcdFile, i_4_fu_932_p2, "i_4_fu_932_p2");
    sc_trace(mVcdFile, i_4_reg_1095, "i_4_reg_1095");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, and_ln138_1_fu_926_p2, "and_ln138_1_fu_926_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state39, "ap_CS_fsm_state39");
    sc_trace(mVcdFile, grp_fu_356_p1, "grp_fu_356_p1");
    sc_trace(mVcdFile, tmp_5_reg_1115, "tmp_5_reg_1115");
    sc_trace(mVcdFile, ap_CS_fsm_state40, "ap_CS_fsm_state40");
    sc_trace(mVcdFile, grp_fu_359_p1, "grp_fu_359_p1");
    sc_trace(mVcdFile, tmp_9_reg_1120, "tmp_9_reg_1120");
    sc_trace(mVcdFile, tmp_2_reg_1125, "tmp_2_reg_1125");
    sc_trace(mVcdFile, ap_CS_fsm_state44, "ap_CS_fsm_state44");
    sc_trace(mVcdFile, grp_fu_372_p2, "grp_fu_372_p2");
    sc_trace(mVcdFile, tmp_10_reg_1130, "tmp_10_reg_1130");
    sc_trace(mVcdFile, tmp_11_reg_1135, "tmp_11_reg_1135");
    sc_trace(mVcdFile, ap_CS_fsm_state50, "ap_CS_fsm_state50");
    sc_trace(mVcdFile, buffer_address0, "buffer_address0");
    sc_trace(mVcdFile, buffer_ce0, "buffer_ce0");
    sc_trace(mVcdFile, buffer_we0, "buffer_we0");
    sc_trace(mVcdFile, buffer_address1, "buffer_address1");
    sc_trace(mVcdFile, buffer_ce1, "buffer_ce1");
    sc_trace(mVcdFile, diff1_address0, "diff1_address0");
    sc_trace(mVcdFile, diff1_ce0, "diff1_ce0");
    sc_trace(mVcdFile, diff1_we0, "diff1_we0");
    sc_trace(mVcdFile, i_0_reg_228, "i_0_reg_228");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, i1_0_reg_239, "i1_0_reg_239");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, x_assign_reg_250, "x_assign_reg_250");
    sc_trace(mVcdFile, i2_0_reg_262, "i2_0_reg_262");
    sc_trace(mVcdFile, p_014_0_reg_274, "p_014_0_reg_274");
    sc_trace(mVcdFile, p_012_0_reg_286, "p_012_0_reg_286");
    sc_trace(mVcdFile, i3_0_reg_298, "i3_0_reg_298");
    sc_trace(mVcdFile, i4_0_reg_309, "i4_0_reg_309");
    sc_trace(mVcdFile, p_0_0_reg_321, "p_0_0_reg_321");
    sc_trace(mVcdFile, zext_ln109_fu_438_p1, "zext_ln109_fu_438_p1");
    sc_trace(mVcdFile, zext_ln115_fu_455_p1, "zext_ln115_fu_455_p1");
    sc_trace(mVcdFile, zext_ln124_fu_619_p1, "zext_ln124_fu_619_p1");
    sc_trace(mVcdFile, sext_ln124_fu_624_p1, "sext_ln124_fu_624_p1");
    sc_trace(mVcdFile, zext_ln130_fu_727_p1, "zext_ln130_fu_727_p1");
    sc_trace(mVcdFile, sext_ln139_fu_938_p1, "sext_ln139_fu_938_p1");
    sc_trace(mVcdFile, sext_ln139_1_fu_943_p1, "sext_ln139_1_fu_943_p1");
    sc_trace(mVcdFile, grp_fu_333_p0, "grp_fu_333_p0");
    sc_trace(mVcdFile, grp_fu_333_p1, "grp_fu_333_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, ap_CS_fsm_state36, "ap_CS_fsm_state36");
    sc_trace(mVcdFile, grp_fu_340_p0, "grp_fu_340_p0");
    sc_trace(mVcdFile, grp_fu_340_p1, "grp_fu_340_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state33, "ap_CS_fsm_state33");
    sc_trace(mVcdFile, grp_fu_348_p0, "grp_fu_348_p0");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, grp_fu_352_p0, "grp_fu_352_p0");
    sc_trace(mVcdFile, ap_CS_fsm_state46, "ap_CS_fsm_state46");
    sc_trace(mVcdFile, grp_fu_356_p0, "grp_fu_356_p0");
    sc_trace(mVcdFile, ap_CS_fsm_state43, "ap_CS_fsm_state43");
    sc_trace(mVcdFile, grp_fu_363_p0, "grp_fu_363_p0");
    sc_trace(mVcdFile, grp_fu_363_p1, "grp_fu_363_p1");
    sc_trace(mVcdFile, grp_fu_377_p0, "grp_fu_377_p0");
    sc_trace(mVcdFile, grp_fu_377_p1, "grp_fu_377_p1");
    sc_trace(mVcdFile, p_Val2_s_fu_475_p1, "p_Val2_s_fu_475_p1");
    sc_trace(mVcdFile, tmp_V_9_fu_497_p1, "tmp_V_9_fu_497_p1");
    sc_trace(mVcdFile, mantissa_V_fu_501_p4, "mantissa_V_fu_501_p4");
    sc_trace(mVcdFile, tmp_V_fu_487_p4, "tmp_V_fu_487_p4");
    sc_trace(mVcdFile, zext_ln339_fu_515_p1, "zext_ln339_fu_515_p1");
    sc_trace(mVcdFile, add_ln339_fu_519_p2, "add_ln339_fu_519_p2");
    sc_trace(mVcdFile, sub_ln1311_fu_533_p2, "sub_ln1311_fu_533_p2");
    sc_trace(mVcdFile, isNeg_fu_525_p3, "isNeg_fu_525_p3");
    sc_trace(mVcdFile, sext_ln1311_fu_539_p1, "sext_ln1311_fu_539_p1");
    sc_trace(mVcdFile, ush_fu_543_p3, "ush_fu_543_p3");
    sc_trace(mVcdFile, sext_ln1311_2_fu_551_p1, "sext_ln1311_2_fu_551_p1");
    sc_trace(mVcdFile, sext_ln1311_3_fu_555_p1, "sext_ln1311_3_fu_555_p1");
    sc_trace(mVcdFile, zext_ln682_fu_511_p1, "zext_ln682_fu_511_p1");
    sc_trace(mVcdFile, zext_ln1287_fu_559_p1, "zext_ln1287_fu_559_p1");
    sc_trace(mVcdFile, r_V_fu_563_p2, "r_V_fu_563_p2");
    sc_trace(mVcdFile, tmp_25_fu_575_p3, "tmp_25_fu_575_p3");
    sc_trace(mVcdFile, r_V_2_fu_569_p2, "r_V_2_fu_569_p2");
    sc_trace(mVcdFile, zext_ln662_fu_583_p1, "zext_ln662_fu_583_p1");
    sc_trace(mVcdFile, tmp_15_fu_587_p4, "tmp_15_fu_587_p4");
    sc_trace(mVcdFile, p_Val2_11_fu_597_p3, "p_Val2_11_fu_597_p3");
    sc_trace(mVcdFile, p_Result_s_fu_479_p3, "p_Result_s_fu_479_p3");
    sc_trace(mVcdFile, result_V_2_fu_605_p2, "result_V_2_fu_605_p2");
    sc_trace(mVcdFile, bitcast_ln124_fu_634_p1, "bitcast_ln124_fu_634_p1");
    sc_trace(mVcdFile, bitcast_ln124_1_fu_652_p1, "bitcast_ln124_1_fu_652_p1");
    sc_trace(mVcdFile, tmp_12_fu_638_p4, "tmp_12_fu_638_p4");
    sc_trace(mVcdFile, trunc_ln124_fu_648_p1, "trunc_ln124_fu_648_p1");
    sc_trace(mVcdFile, tmp_13_fu_656_p4, "tmp_13_fu_656_p4");
    sc_trace(mVcdFile, trunc_ln124_1_fu_666_p1, "trunc_ln124_1_fu_666_p1");
    sc_trace(mVcdFile, or_ln124_fu_694_p2, "or_ln124_fu_694_p2");
    sc_trace(mVcdFile, or_ln124_1_fu_698_p2, "or_ln124_1_fu_698_p2");
    sc_trace(mVcdFile, and_ln124_fu_702_p2, "and_ln124_fu_702_p2");
    sc_trace(mVcdFile, grp_fu_363_p2, "grp_fu_363_p2");
    sc_trace(mVcdFile, bitcast_ln135_fu_739_p1, "bitcast_ln135_fu_739_p1");
    sc_trace(mVcdFile, xor_ln135_fu_743_p2, "xor_ln135_fu_743_p2");
    sc_trace(mVcdFile, bitcast_ln138_1_fu_753_p1, "bitcast_ln138_1_fu_753_p1");
    sc_trace(mVcdFile, tmp_16_fu_757_p4, "tmp_16_fu_757_p4");
    sc_trace(mVcdFile, trunc_ln138_fu_767_p1, "trunc_ln138_fu_767_p1");
    sc_trace(mVcdFile, icmp_ln138_3_fu_777_p2, "icmp_ln138_3_fu_777_p2");
    sc_trace(mVcdFile, icmp_ln138_2_fu_771_p2, "icmp_ln138_2_fu_771_p2");
    sc_trace(mVcdFile, bitcast_ln130_fu_789_p1, "bitcast_ln130_fu_789_p1");
    sc_trace(mVcdFile, bitcast_ln130_1_fu_806_p1, "bitcast_ln130_1_fu_806_p1");
    sc_trace(mVcdFile, tmp_17_fu_792_p4, "tmp_17_fu_792_p4");
    sc_trace(mVcdFile, trunc_ln130_fu_802_p1, "trunc_ln130_fu_802_p1");
    sc_trace(mVcdFile, icmp_ln130_1_fu_830_p2, "icmp_ln130_1_fu_830_p2");
    sc_trace(mVcdFile, icmp_ln130_fu_824_p2, "icmp_ln130_fu_824_p2");
    sc_trace(mVcdFile, tmp_18_fu_810_p4, "tmp_18_fu_810_p4");
    sc_trace(mVcdFile, trunc_ln130_1_fu_820_p1, "trunc_ln130_1_fu_820_p1");
    sc_trace(mVcdFile, icmp_ln130_3_fu_848_p2, "icmp_ln130_3_fu_848_p2");
    sc_trace(mVcdFile, icmp_ln130_2_fu_842_p2, "icmp_ln130_2_fu_842_p2");
    sc_trace(mVcdFile, or_ln130_fu_836_p2, "or_ln130_fu_836_p2");
    sc_trace(mVcdFile, or_ln130_1_fu_854_p2, "or_ln130_1_fu_854_p2");
    sc_trace(mVcdFile, and_ln130_fu_860_p2, "and_ln130_fu_860_p2");
    sc_trace(mVcdFile, and_ln130_1_fu_866_p2, "and_ln130_1_fu_866_p2");
    sc_trace(mVcdFile, bitcast_ln138_fu_887_p1, "bitcast_ln138_fu_887_p1");
    sc_trace(mVcdFile, tmp_20_fu_891_p4, "tmp_20_fu_891_p4");
    sc_trace(mVcdFile, trunc_ln138_1_fu_901_p1, "trunc_ln138_1_fu_901_p1");
    sc_trace(mVcdFile, or_ln138_fu_917_p2, "or_ln138_fu_917_p2");
    sc_trace(mVcdFile, and_ln138_fu_921_p2, "and_ln138_fu_921_p2");
    sc_trace(mVcdFile, grp_fu_333_opcode, "grp_fu_333_opcode");
    sc_trace(mVcdFile, grp_fu_333_ce, "grp_fu_333_ce");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, ap_CS_fsm_state37, "ap_CS_fsm_state37");
    sc_trace(mVcdFile, ap_CS_fsm_state38, "ap_CS_fsm_state38");
    sc_trace(mVcdFile, grp_fu_340_ce, "grp_fu_340_ce");
    sc_trace(mVcdFile, ap_CS_fsm_state34, "ap_CS_fsm_state34");
    sc_trace(mVcdFile, grp_fu_352_ce, "grp_fu_352_ce");
    sc_trace(mVcdFile, grp_fu_363_opcode, "grp_fu_363_opcode");
    sc_trace(mVcdFile, grp_fu_372_ce, "grp_fu_372_ce");
    sc_trace(mVcdFile, grp_fu_377_ce, "grp_fu_377_ce");
    sc_trace(mVcdFile, ap_block_state53, "ap_block_state53");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

compute_features::~compute_features() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete buffer_U;
    delete diff1_U;
    delete feature_extractoreOg_U20;
    delete feature_extractorg8j_U21;
    delete feature_extractorlbW_U22;
    delete feature_extractormb6_U23;
    delete feature_extractorncg_U24;
    delete feature_extractorncg_U25;
    delete feature_extractorcud_U26;
    delete feature_extractorocq_U27;
    delete feature_extractorpcA_U28;
}

void compute_features::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void compute_features::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv64_BFBB089A02752546;
}

void compute_features::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) && 
                    !(esl_seteq<1,2,2>(features_out_V_1_state.read(), ap_const_lv2_1) || esl_seteq<1,1,1>(ap_const_logic_0, features_out_V_1_ack_in.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, features_out_V_TREADY.read()) && 
  esl_seteq<1,2,2>(features_out_V_1_state.read(), ap_const_lv2_3))))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        features_out_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, features_out_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, features_out_V_1_vld_out.read()))) {
            features_out_V_1_sel_rd =  (sc_logic) (~features_out_V_1_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        features_out_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, features_out_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, features_out_V_1_ack_in.read()))) {
            features_out_V_1_sel_wr =  (sc_logic) (~features_out_V_1_sel_wr.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        features_out_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, features_out_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, features_out_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(features_out_V_1_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, features_out_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(features_out_V_1_state.read(), ap_const_lv2_2)))) {
            features_out_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, features_out_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, features_out_V_TREADY.read()) && 
                     esl_seteq<1,2,2>(features_out_V_1_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, features_out_V_TREADY.read()) && 
                     esl_seteq<1,2,2>(features_out_V_1_state.read(), ap_const_lv2_1)))) {
            features_out_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, features_out_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(features_out_V_1_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, features_out_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(features_out_V_1_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(features_out_V_1_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, features_out_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, features_out_V_TREADY.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, features_out_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, features_out_V_1_ack_out.read()))))) {
            features_out_V_1_state = ap_const_lv2_3;
        } else {
            features_out_V_1_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln108_fu_426_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, normalized_in_V_empty_n.read())) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln108_fu_426_p2.read()))) {
        i1_0_reg_239 = ap_const_lv8_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        i1_0_reg_239 = i_1_reg_959.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln114_fu_443_p2.read()))) {
        i2_0_reg_262 = ap_const_lv8_64;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        i2_0_reg_262 = i_2_reg_1002.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln123_fu_469_p2.read()))) {
        i3_0_reg_298 = ap_const_lv7_14;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        i3_0_reg_298 = i_3_reg_1050.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        i4_0_reg_309 = i_4_reg_1095.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln129_fu_721_p2.read()))) {
        i4_0_reg_309 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln108_fu_426_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln108_fu_426_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, normalized_in_V_empty_n.read())))) {
        i_0_reg_228 = i_fu_432_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        i_0_reg_228 = ap_const_lv8_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln123_fu_469_p2.read()))) {
        p_012_0_reg_286 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        p_012_0_reg_286 = aip_1_fu_879_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln123_fu_469_p2.read()))) {
        p_014_0_reg_274 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        p_014_0_reg_274 = slope_ip_2_fu_872_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read())) {
        p_0_0_reg_321 = grp_fu_333_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln129_fu_721_p2.read()))) {
        p_0_0_reg_321 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()))) {
        reg_384 = buffer_q1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()))) {
        reg_384 = buffer_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        reg_391 = buffer_q0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()))) {
        reg_391 = buffer_q1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln114_fu_443_p2.read()))) {
        x_assign_reg_250 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        x_assign_reg_250 = tdia_1_fu_714_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        and_ln124_1_reg_1027 = and_ln124_1_fu_708_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, features_out_V_1_load_A.read())) {
        features_out_V_1_payload_A = features_out_V_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, features_out_V_1_load_B.read())) {
        features_out_V_1_payload_B = features_out_V_1_data_in.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_1_reg_959 = i_1_fu_449_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        i_2_reg_1002 = i_2_fu_628_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln129_fu_721_p2.read()))) {
        i_3_reg_1050 = i_3_fu_733_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        i_4_reg_1095 = i_4_fu_932_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        icmp_ln124_1_reg_1012 = icmp_ln124_1_fu_676_p2.read();
        icmp_ln124_2_reg_1017 = icmp_ln124_2_fu_682_p2.read();
        icmp_ln124_3_reg_1022 = icmp_ln124_3_fu_688_p2.read();
        icmp_ln124_reg_1007 = icmp_ln124_fu_670_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        icmp_ln138_1_reg_1087 = icmp_ln138_1_fu_911_p2.read();
        icmp_ln138_reg_1082 = icmp_ln138_fu_905_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln129_fu_721_p2.read()))) {
        or_ln138_1_reg_1060 = or_ln138_1_fu_783_p2.read();
        slope_ip_reg_1055 = slope_ip_fu_749_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln123_fu_469_p2.read()))) {
        p_Val2_12_reg_987 = p_Val2_12_fu_611_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) && 
  esl_seteq<1,1,1>(features_out_V_1_ack_in.read(), ap_const_logic_1)))) {
        reg_398 = grp_fu_333_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, and_ln124_1_reg_1027.read())) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        reg_405 = grp_fu_348_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && 
  esl_seteq<1,1,1>(features_out_V_1_ack_in.read(), ap_const_logic_1)))) {
        reg_410 = grp_fu_340_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()))) {
        reg_416 = grp_fu_377_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        slope_ip_1_reg_1065 = diff1_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        tmp_10_reg_1130 = grp_fu_372_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read())) {
        tmp_11_reg_1135 = grp_fu_377_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read())) {
        tmp_2_reg_1125 = grp_fu_356_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        tmp_5_reg_1115 = grp_fu_356_p1.read();
        tmp_9_reg_1120 = grp_fu_359_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln114_fu_443_p2.read()))) {
        zext_ln115_1_reg_969 = zext_ln115_1_fu_460_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        zext_ln123_reg_979 = zext_ln123_fu_465_p1.read();
    }
}

void compute_features::thread_add_ln339_fu_519_p2() {
    add_ln339_fu_519_p2 = (!ap_const_lv9_181.is_01() || !zext_ln339_fu_515_p1.read().is_01())? sc_lv<9>(): (sc_bigint<9>(ap_const_lv9_181) + sc_biguint<9>(zext_ln339_fu_515_p1.read()));
}

void compute_features::thread_aip_1_fu_879_p3() {
    aip_1_fu_879_p3 = (!and_ln130_1_fu_866_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln130_1_fu_866_p2.read()[0].to_bool())? reg_384.read(): p_012_0_reg_286.read());
}

void compute_features::thread_and_ln124_1_fu_708_p2() {
    and_ln124_1_fu_708_p2 = (and_ln124_fu_702_p2.read() & grp_fu_363_p2.read());
}

void compute_features::thread_and_ln124_fu_702_p2() {
    and_ln124_fu_702_p2 = (or_ln124_fu_694_p2.read() & or_ln124_1_fu_698_p2.read());
}

void compute_features::thread_and_ln130_1_fu_866_p2() {
    and_ln130_1_fu_866_p2 = (and_ln130_fu_860_p2.read() & grp_fu_363_p2.read());
}

void compute_features::thread_and_ln130_fu_860_p2() {
    and_ln130_fu_860_p2 = (or_ln130_fu_836_p2.read() & or_ln130_1_fu_854_p2.read());
}

void compute_features::thread_and_ln138_1_fu_926_p2() {
    and_ln138_1_fu_926_p2 = (and_ln138_fu_921_p2.read() & grp_fu_363_p2.read());
}

void compute_features::thread_and_ln138_fu_921_p2() {
    and_ln138_fu_921_p2 = (or_ln138_fu_917_p2.read() & or_ln138_1_reg_1060.read());
}

void compute_features::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void compute_features::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void compute_features::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void compute_features::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void compute_features::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void compute_features::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void compute_features::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void compute_features::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void compute_features::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void compute_features::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void compute_features::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void compute_features::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void compute_features::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void compute_features::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[24];
}

void compute_features::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[25];
}

void compute_features::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[26];
}

void compute_features::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read()[27];
}

void compute_features::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[28];
}

void compute_features::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void compute_features::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[29];
}

void compute_features::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[30];
}

void compute_features::thread_ap_CS_fsm_state32() {
    ap_CS_fsm_state32 = ap_CS_fsm.read()[31];
}

void compute_features::thread_ap_CS_fsm_state33() {
    ap_CS_fsm_state33 = ap_CS_fsm.read()[32];
}

void compute_features::thread_ap_CS_fsm_state34() {
    ap_CS_fsm_state34 = ap_CS_fsm.read()[33];
}

void compute_features::thread_ap_CS_fsm_state35() {
    ap_CS_fsm_state35 = ap_CS_fsm.read()[34];
}

void compute_features::thread_ap_CS_fsm_state36() {
    ap_CS_fsm_state36 = ap_CS_fsm.read()[35];
}

void compute_features::thread_ap_CS_fsm_state37() {
    ap_CS_fsm_state37 = ap_CS_fsm.read()[36];
}

void compute_features::thread_ap_CS_fsm_state38() {
    ap_CS_fsm_state38 = ap_CS_fsm.read()[37];
}

void compute_features::thread_ap_CS_fsm_state39() {
    ap_CS_fsm_state39 = ap_CS_fsm.read()[38];
}

void compute_features::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void compute_features::thread_ap_CS_fsm_state40() {
    ap_CS_fsm_state40 = ap_CS_fsm.read()[39];
}

void compute_features::thread_ap_CS_fsm_state41() {
    ap_CS_fsm_state41 = ap_CS_fsm.read()[40];
}

void compute_features::thread_ap_CS_fsm_state42() {
    ap_CS_fsm_state42 = ap_CS_fsm.read()[41];
}

void compute_features::thread_ap_CS_fsm_state43() {
    ap_CS_fsm_state43 = ap_CS_fsm.read()[42];
}

void compute_features::thread_ap_CS_fsm_state44() {
    ap_CS_fsm_state44 = ap_CS_fsm.read()[43];
}

void compute_features::thread_ap_CS_fsm_state45() {
    ap_CS_fsm_state45 = ap_CS_fsm.read()[44];
}

void compute_features::thread_ap_CS_fsm_state46() {
    ap_CS_fsm_state46 = ap_CS_fsm.read()[45];
}

void compute_features::thread_ap_CS_fsm_state47() {
    ap_CS_fsm_state47 = ap_CS_fsm.read()[46];
}

void compute_features::thread_ap_CS_fsm_state48() {
    ap_CS_fsm_state48 = ap_CS_fsm.read()[47];
}

void compute_features::thread_ap_CS_fsm_state49() {
    ap_CS_fsm_state49 = ap_CS_fsm.read()[48];
}

void compute_features::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void compute_features::thread_ap_CS_fsm_state50() {
    ap_CS_fsm_state50 = ap_CS_fsm.read()[49];
}

void compute_features::thread_ap_CS_fsm_state51() {
    ap_CS_fsm_state51 = ap_CS_fsm.read()[50];
}

void compute_features::thread_ap_CS_fsm_state52() {
    ap_CS_fsm_state52 = ap_CS_fsm.read()[51];
}

void compute_features::thread_ap_CS_fsm_state53() {
    ap_CS_fsm_state53 = ap_CS_fsm.read()[52];
}

void compute_features::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void compute_features::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void compute_features::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void compute_features::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void compute_features::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void compute_features::thread_ap_block_state2() {
    ap_block_state2 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln108_fu_426_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, normalized_in_V_empty_n.read()));
}

void compute_features::thread_ap_block_state53() {
    ap_block_state53 = (esl_seteq<1,2,2>(features_out_V_1_state.read(), ap_const_lv2_1) || (esl_seteq<1,1,1>(ap_const_logic_0, features_out_V_TREADY.read()) && 
  esl_seteq<1,2,2>(features_out_V_1_state.read(), ap_const_lv2_3)));
}

void compute_features::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) && 
         !(esl_seteq<1,2,2>(features_out_V_1_state.read(), ap_const_lv2_1) || esl_seteq<1,1,1>(ap_const_logic_0, features_out_V_1_ack_in.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, features_out_V_TREADY.read()) && 
  esl_seteq<1,2,2>(features_out_V_1_state.read(), ap_const_lv2_3))))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void compute_features::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void compute_features::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) && 
         !(esl_seteq<1,2,2>(features_out_V_1_state.read(), ap_const_lv2_1) || esl_seteq<1,1,1>(ap_const_logic_0, features_out_V_1_ack_in.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, features_out_V_TREADY.read()) && 
  esl_seteq<1,2,2>(features_out_V_1_state.read(), ap_const_lv2_3))))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void compute_features::thread_bitcast_ln124_1_fu_652_p1() {
    bitcast_ln124_1_fu_652_p1 = buffer_q0.read();
}

void compute_features::thread_bitcast_ln124_fu_634_p1() {
    bitcast_ln124_fu_634_p1 = buffer_q1.read();
}

void compute_features::thread_bitcast_ln130_1_fu_806_p1() {
    bitcast_ln130_1_fu_806_p1 = p_014_0_reg_274.read();
}

void compute_features::thread_bitcast_ln130_fu_789_p1() {
    bitcast_ln130_fu_789_p1 = slope_ip_1_reg_1065.read();
}

void compute_features::thread_bitcast_ln135_fu_739_p1() {
    bitcast_ln135_fu_739_p1 = p_014_0_reg_274.read();
}

void compute_features::thread_bitcast_ln138_1_fu_753_p1() {
    bitcast_ln138_1_fu_753_p1 = x_assign_reg_250.read();
}

void compute_features::thread_bitcast_ln138_fu_887_p1() {
    bitcast_ln138_fu_887_p1 = reg_405.read();
}

void compute_features::thread_buffer_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        buffer_address0 =  (sc_lv<8>) (sext_ln139_fu_938_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        buffer_address0 =  (sc_lv<8>) (sext_ln124_fu_624_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        buffer_address0 =  (sc_lv<8>) (zext_ln115_fu_455_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        buffer_address0 =  (sc_lv<8>) (zext_ln109_fu_438_p1.read());
    } else {
        buffer_address0 = "XXXXXXXX";
    }
}

void compute_features::thread_buffer_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        buffer_address1 =  (sc_lv<8>) (sext_ln139_1_fu_943_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        buffer_address1 =  (sc_lv<8>) (zext_ln130_fu_727_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        buffer_address1 =  (sc_lv<8>) (zext_ln124_fu_619_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        buffer_address1 =  (sc_lv<8>) (zext_ln115_1_fu_460_p1.read());
    } else {
        buffer_address1 = "XXXXXXXX";
    }
}

void compute_features::thread_buffer_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln108_fu_426_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, normalized_in_V_empty_n.read()))) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()))) {
        buffer_ce0 = ap_const_logic_1;
    } else {
        buffer_ce0 = ap_const_logic_0;
    }
}

void compute_features::thread_buffer_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()))) {
        buffer_ce1 = ap_const_logic_1;
    } else {
        buffer_ce1 = ap_const_logic_0;
    }
}

void compute_features::thread_buffer_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln108_fu_426_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln108_fu_426_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, normalized_in_V_empty_n.read())))) {
        buffer_we0 = ap_const_logic_1;
    } else {
        buffer_we0 = ap_const_logic_0;
    }
}

void compute_features::thread_diff1_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        diff1_address0 =  (sc_lv<8>) (zext_ln130_fu_727_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        diff1_address0 =  (sc_lv<8>) (zext_ln115_1_reg_969.read());
    } else {
        diff1_address0 = "XXXXXXXX";
    }
}

void compute_features::thread_diff1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        diff1_ce0 = ap_const_logic_1;
    } else {
        diff1_ce0 = ap_const_logic_0;
    }
}

void compute_features::thread_diff1_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        diff1_we0 = ap_const_logic_1;
    } else {
        diff1_we0 = ap_const_logic_0;
    }
}

void compute_features::thread_features_out_V_1_ack_in() {
    features_out_V_1_ack_in = features_out_V_1_state.read()[1];
}

void compute_features::thread_features_out_V_1_ack_out() {
    features_out_V_1_ack_out = features_out_V_TREADY.read();
}

void compute_features::thread_features_out_V_1_data_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()))) {
        features_out_V_1_data_in = grp_fu_352_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        features_out_V_1_data_in = grp_fu_340_p2.read();
    } else {
        features_out_V_1_data_in =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void compute_features::thread_features_out_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, features_out_V_1_sel.read())) {
        features_out_V_1_data_out = features_out_V_1_payload_B.read();
    } else {
        features_out_V_1_data_out = features_out_V_1_payload_A.read();
    }
}

void compute_features::thread_features_out_V_1_load_A() {
    features_out_V_1_load_A = (features_out_V_1_state_cmp_full.read() & ~features_out_V_1_sel_wr.read());
}

void compute_features::thread_features_out_V_1_load_B() {
    features_out_V_1_load_B = (features_out_V_1_sel_wr.read() & features_out_V_1_state_cmp_full.read());
}

void compute_features::thread_features_out_V_1_sel() {
    features_out_V_1_sel = features_out_V_1_sel_rd.read();
}

void compute_features::thread_features_out_V_1_state_cmp_full() {
    features_out_V_1_state_cmp_full =  (sc_logic) ((!features_out_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(features_out_V_1_state.read() != ap_const_lv2_1))[0];
}

void compute_features::thread_features_out_V_1_vld_in() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && 
          esl_seteq<1,1,1>(features_out_V_1_ack_in.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) && 
          esl_seteq<1,1,1>(features_out_V_1_ack_in.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) && 
          esl_seteq<1,1,1>(features_out_V_1_ack_in.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()) && 
          esl_seteq<1,1,1>(features_out_V_1_ack_in.read(), ap_const_logic_1)))) {
        features_out_V_1_vld_in = ap_const_logic_1;
    } else {
        features_out_V_1_vld_in = ap_const_logic_0;
    }
}

void compute_features::thread_features_out_V_1_vld_out() {
    features_out_V_1_vld_out = features_out_V_1_state.read()[0];
}

void compute_features::thread_features_out_V_TDATA() {
    features_out_V_TDATA = features_out_V_1_data_out.read();
}

void compute_features::thread_features_out_V_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()))) {
        features_out_V_TDATA_blk_n = features_out_V_1_state.read()[1];
    } else {
        features_out_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void compute_features::thread_features_out_V_TVALID() {
    features_out_V_TVALID = features_out_V_1_state.read()[0];
}

void compute_features::thread_grp_fu_333_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) && 
          esl_seteq<1,1,1>(features_out_V_1_ack_in.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && 
          esl_seteq<1,1,1>(features_out_V_1_ack_in.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()))) {
        grp_fu_333_ce = ap_const_logic_1;
    } else {
        grp_fu_333_ce = ap_const_logic_0;
    }
}

void compute_features::thread_grp_fu_333_opcode() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_333_opcode = ap_const_lv2_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln138_1_fu_926_p2.read())))) {
        grp_fu_333_opcode = ap_const_lv2_0;
    } else {
        grp_fu_333_opcode =  (sc_lv<2>) ("XX");
    }
}

void compute_features::thread_grp_fu_333_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        grp_fu_333_p0 = p_0_0_reg_321.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        grp_fu_333_p0 = x_assign_reg_250.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()))) {
        grp_fu_333_p0 = reg_384.read();
    } else {
        grp_fu_333_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void compute_features::thread_grp_fu_333_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        grp_fu_333_p1 = reg_410.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        grp_fu_333_p1 = ap_const_lv32_C2CA0000;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()))) {
        grp_fu_333_p1 = reg_391.read();
    } else {
        grp_fu_333_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void compute_features::thread_grp_fu_340_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && 
          esl_seteq<1,1,1>(features_out_V_1_ack_in.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()))) {
        grp_fu_340_ce = ap_const_logic_1;
    } else {
        grp_fu_340_ce = ap_const_logic_0;
    }
}

void compute_features::thread_grp_fu_340_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        grp_fu_340_p0 = reg_398.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        grp_fu_340_p0 = p_012_0_reg_286.read();
    } else {
        grp_fu_340_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void compute_features::thread_grp_fu_340_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        grp_fu_340_p1 = ap_const_lv32_3F000000;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        grp_fu_340_p1 = ap_const_lv32_40800000;
    } else {
        grp_fu_340_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void compute_features::thread_grp_fu_348_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        grp_fu_348_p0 = i4_0_reg_309.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        grp_fu_348_p0 = zext_ln123_reg_979.read();
    } else {
        grp_fu_348_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void compute_features::thread_grp_fu_352_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) && 
          esl_seteq<1,1,1>(features_out_V_1_ack_in.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) && 
          esl_seteq<1,1,1>(features_out_V_1_ack_in.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()) && 
          esl_seteq<1,1,1>(features_out_V_1_ack_in.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()))) {
        grp_fu_352_ce = ap_const_logic_1;
    } else {
        grp_fu_352_ce = ap_const_logic_0;
    }
}

void compute_features::thread_grp_fu_352_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read())) {
        grp_fu_352_p0 = tmp_11_reg_1135.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()))) {
        grp_fu_352_p0 = reg_416.read();
    } else {
        grp_fu_352_p0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void compute_features::thread_grp_fu_356_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        grp_fu_356_p0 = reg_398.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        grp_fu_356_p0 = slope_ip_reg_1055.read();
    } else {
        grp_fu_356_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void compute_features::thread_grp_fu_363_opcode() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
        grp_fu_363_opcode = ap_const_lv5_4;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_fu_363_opcode = ap_const_lv5_2;
    } else {
        grp_fu_363_opcode =  (sc_lv<5>) ("XXXXX");
    }
}

void compute_features::thread_grp_fu_363_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        grp_fu_363_p0 = reg_405.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        grp_fu_363_p0 = diff1_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_fu_363_p0 = buffer_q1.read();
    } else {
        grp_fu_363_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void compute_features::thread_grp_fu_363_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        grp_fu_363_p1 = x_assign_reg_250.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        grp_fu_363_p1 = p_014_0_reg_274.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_fu_363_p1 = buffer_q0.read();
    } else {
        grp_fu_363_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void compute_features::thread_grp_fu_372_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) && 
          esl_seteq<1,1,1>(features_out_V_1_ack_in.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && 
          esl_seteq<1,1,1>(features_out_V_1_ack_in.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()))) {
        grp_fu_372_ce = ap_const_logic_1;
    } else {
        grp_fu_372_ce = ap_const_logic_0;
    }
}

void compute_features::thread_grp_fu_377_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) && 
          esl_seteq<1,1,1>(features_out_V_1_ack_in.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && 
          esl_seteq<1,1,1>(features_out_V_1_ack_in.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) && 
          esl_seteq<1,1,1>(features_out_V_1_ack_in.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) && 
          esl_seteq<1,1,1>(features_out_V_1_ack_in.read(), ap_const_logic_1)))) {
        grp_fu_377_ce = ap_const_logic_1;
    } else {
        grp_fu_377_ce = ap_const_logic_0;
    }
}

void compute_features::thread_grp_fu_377_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read())) {
        grp_fu_377_p0 = tmp_10_reg_1130.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        grp_fu_377_p0 = tmp_2_reg_1125.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        grp_fu_377_p0 = tmp_5_reg_1115.read();
    } else {
        grp_fu_377_p0 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void compute_features::thread_grp_fu_377_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read())) {
        grp_fu_377_p1 = ap_const_lv64_3FA999999999999A;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        grp_fu_377_p1 = ap_const_lv64_3F847AE147AE147B;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        grp_fu_377_p1 = ap_const_lv64_405B189BF162AE4B;
    } else {
        grp_fu_377_p1 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void compute_features::thread_i_1_fu_449_p2() {
    i_1_fu_449_p2 = (!i1_0_reg_239.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(i1_0_reg_239.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void compute_features::thread_i_2_fu_628_p2() {
    i_2_fu_628_p2 = (!ap_const_lv8_1.is_01() || !i2_0_reg_262.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_1) + sc_biguint<8>(i2_0_reg_262.read()));
}

void compute_features::thread_i_3_fu_733_p2() {
    i_3_fu_733_p2 = (!ap_const_lv7_1.is_01() || !i3_0_reg_298.read().is_01())? sc_lv<7>(): (sc_biguint<7>(ap_const_lv7_1) + sc_biguint<7>(i3_0_reg_298.read()));
}

void compute_features::thread_i_4_fu_932_p2() {
    i_4_fu_932_p2 = (!ap_const_lv32_1.is_01() || !i4_0_reg_309.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_bigint<32>(i4_0_reg_309.read()));
}

void compute_features::thread_i_fu_432_p2() {
    i_fu_432_p2 = (!i_0_reg_228.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(i_0_reg_228.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void compute_features::thread_icmp_ln108_fu_426_p2() {
    icmp_ln108_fu_426_p2 = (!i_0_reg_228.read().is_01() || !ap_const_lv8_C8.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_228.read() == ap_const_lv8_C8);
}

void compute_features::thread_icmp_ln114_fu_443_p2() {
    icmp_ln114_fu_443_p2 = (!i1_0_reg_239.read().is_01() || !ap_const_lv8_C7.is_01())? sc_lv<1>(): sc_lv<1>(i1_0_reg_239.read() == ap_const_lv8_C7);
}

void compute_features::thread_icmp_ln123_fu_469_p2() {
    icmp_ln123_fu_469_p2 = (!i2_0_reg_262.read().is_01() || !ap_const_lv8_C8.is_01())? sc_lv<1>(): sc_lv<1>(i2_0_reg_262.read() == ap_const_lv8_C8);
}

void compute_features::thread_icmp_ln124_1_fu_676_p2() {
    icmp_ln124_1_fu_676_p2 = (!trunc_ln124_fu_648_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln124_fu_648_p1.read() == ap_const_lv23_0);
}

void compute_features::thread_icmp_ln124_2_fu_682_p2() {
    icmp_ln124_2_fu_682_p2 = (!tmp_13_fu_656_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_13_fu_656_p4.read() != ap_const_lv8_FF);
}

void compute_features::thread_icmp_ln124_3_fu_688_p2() {
    icmp_ln124_3_fu_688_p2 = (!trunc_ln124_1_fu_666_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln124_1_fu_666_p1.read() == ap_const_lv23_0);
}

void compute_features::thread_icmp_ln124_fu_670_p2() {
    icmp_ln124_fu_670_p2 = (!tmp_12_fu_638_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_12_fu_638_p4.read() != ap_const_lv8_FF);
}

void compute_features::thread_icmp_ln129_fu_721_p2() {
    icmp_ln129_fu_721_p2 = (!i3_0_reg_298.read().is_01() || !ap_const_lv7_63.is_01())? sc_lv<1>(): sc_lv<1>(i3_0_reg_298.read() == ap_const_lv7_63);
}

void compute_features::thread_icmp_ln130_1_fu_830_p2() {
    icmp_ln130_1_fu_830_p2 = (!trunc_ln130_fu_802_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln130_fu_802_p1.read() == ap_const_lv23_0);
}

void compute_features::thread_icmp_ln130_2_fu_842_p2() {
    icmp_ln130_2_fu_842_p2 = (!tmp_18_fu_810_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_18_fu_810_p4.read() != ap_const_lv8_FF);
}

void compute_features::thread_icmp_ln130_3_fu_848_p2() {
    icmp_ln130_3_fu_848_p2 = (!trunc_ln130_1_fu_820_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln130_1_fu_820_p1.read() == ap_const_lv23_0);
}

void compute_features::thread_icmp_ln130_fu_824_p2() {
    icmp_ln130_fu_824_p2 = (!tmp_17_fu_792_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_17_fu_792_p4.read() != ap_const_lv8_FF);
}

void compute_features::thread_icmp_ln138_1_fu_911_p2() {
    icmp_ln138_1_fu_911_p2 = (!trunc_ln138_1_fu_901_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln138_1_fu_901_p1.read() == ap_const_lv23_0);
}

void compute_features::thread_icmp_ln138_2_fu_771_p2() {
    icmp_ln138_2_fu_771_p2 = (!tmp_16_fu_757_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_16_fu_757_p4.read() != ap_const_lv8_FF);
}

void compute_features::thread_icmp_ln138_3_fu_777_p2() {
    icmp_ln138_3_fu_777_p2 = (!trunc_ln138_fu_767_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln138_fu_767_p1.read() == ap_const_lv23_0);
}

void compute_features::thread_icmp_ln138_fu_905_p2() {
    icmp_ln138_fu_905_p2 = (!tmp_20_fu_891_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_20_fu_891_p4.read() != ap_const_lv8_FF);
}

void compute_features::thread_isNeg_fu_525_p3() {
    isNeg_fu_525_p3 = add_ln339_fu_519_p2.read().range(8, 8);
}

void compute_features::thread_mantissa_V_fu_501_p4() {
    mantissa_V_fu_501_p4 = esl_concat<24,1>(esl_concat<1,23>(ap_const_lv1_1, tmp_V_9_fu_497_p1.read()), ap_const_lv1_0);
}

void compute_features::thread_normalized_in_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln108_fu_426_p2.read()))) {
        normalized_in_V_blk_n = normalized_in_V_empty_n.read();
    } else {
        normalized_in_V_blk_n = ap_const_logic_1;
    }
}

void compute_features::thread_normalized_in_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln108_fu_426_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln108_fu_426_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, normalized_in_V_empty_n.read())))) {
        normalized_in_V_read = ap_const_logic_1;
    } else {
        normalized_in_V_read = ap_const_logic_0;
    }
}

void compute_features::thread_or_ln124_1_fu_698_p2() {
    or_ln124_1_fu_698_p2 = (icmp_ln124_3_reg_1022.read() | icmp_ln124_2_reg_1017.read());
}

void compute_features::thread_or_ln124_fu_694_p2() {
    or_ln124_fu_694_p2 = (icmp_ln124_1_reg_1012.read() | icmp_ln124_reg_1007.read());
}

void compute_features::thread_or_ln130_1_fu_854_p2() {
    or_ln130_1_fu_854_p2 = (icmp_ln130_3_fu_848_p2.read() | icmp_ln130_2_fu_842_p2.read());
}

void compute_features::thread_or_ln130_fu_836_p2() {
    or_ln130_fu_836_p2 = (icmp_ln130_1_fu_830_p2.read() | icmp_ln130_fu_824_p2.read());
}

void compute_features::thread_or_ln138_1_fu_783_p2() {
    or_ln138_1_fu_783_p2 = (icmp_ln138_3_fu_777_p2.read() | icmp_ln138_2_fu_771_p2.read());
}

void compute_features::thread_or_ln138_fu_917_p2() {
    or_ln138_fu_917_p2 = (icmp_ln138_1_reg_1087.read() | icmp_ln138_reg_1082.read());
}

void compute_features::thread_p_Result_s_fu_479_p3() {
    p_Result_s_fu_479_p3 = p_Val2_s_fu_475_p1.read().range(31, 31);
}

void compute_features::thread_p_Val2_11_fu_597_p3() {
    p_Val2_11_fu_597_p3 = (!isNeg_fu_525_p3.read()[0].is_01())? sc_lv<32>(): ((isNeg_fu_525_p3.read()[0].to_bool())? zext_ln662_fu_583_p1.read(): tmp_15_fu_587_p4.read());
}

void compute_features::thread_p_Val2_12_fu_611_p3() {
    p_Val2_12_fu_611_p3 = (!p_Result_s_fu_479_p3.read()[0].is_01())? sc_lv<32>(): ((p_Result_s_fu_479_p3.read()[0].to_bool())? result_V_2_fu_605_p2.read(): p_Val2_11_fu_597_p3.read());
}

void compute_features::thread_p_Val2_s_fu_475_p1() {
    p_Val2_s_fu_475_p1 = x_assign_reg_250.read();
}

void compute_features::thread_r_V_2_fu_569_p2() {
    r_V_2_fu_569_p2 = (!zext_ln1287_fu_559_p1.read().is_01())? sc_lv<79>(): zext_ln682_fu_511_p1.read() << (unsigned short)zext_ln1287_fu_559_p1.read().to_uint();
}

void compute_features::thread_r_V_fu_563_p2() {
    r_V_fu_563_p2 = (!sext_ln1311_3_fu_555_p1.read().is_01())? sc_lv<25>(): mantissa_V_fu_501_p4.read() >> (unsigned short)sext_ln1311_3_fu_555_p1.read().to_uint();
}

void compute_features::thread_result_V_2_fu_605_p2() {
    result_V_2_fu_605_p2 = (!ap_const_lv32_0.is_01() || !p_Val2_11_fu_597_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(p_Val2_11_fu_597_p3.read()));
}

void compute_features::thread_sext_ln124_fu_624_p1() {
    sext_ln124_fu_624_p1 = esl_sext<64,32>(p_Val2_12_reg_987.read());
}

void compute_features::thread_sext_ln1311_2_fu_551_p1() {
    sext_ln1311_2_fu_551_p1 = esl_sext<32,9>(ush_fu_543_p3.read());
}

void compute_features::thread_sext_ln1311_3_fu_555_p1() {
    sext_ln1311_3_fu_555_p1 = esl_sext<25,9>(ush_fu_543_p3.read());
}

void compute_features::thread_sext_ln1311_fu_539_p1() {
    sext_ln1311_fu_539_p1 = esl_sext<9,8>(sub_ln1311_fu_533_p2.read());
}

void compute_features::thread_sext_ln139_1_fu_943_p1() {
    sext_ln139_1_fu_943_p1 = esl_sext<64,32>(i_4_fu_932_p2.read());
}

void compute_features::thread_sext_ln139_fu_938_p1() {
    sext_ln139_fu_938_p1 = esl_sext<64,32>(i4_0_reg_309.read());
}

void compute_features::thread_slope_ip_2_fu_872_p3() {
    slope_ip_2_fu_872_p3 = (!and_ln130_1_fu_866_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln130_1_fu_866_p2.read()[0].to_bool())? slope_ip_1_reg_1065.read(): p_014_0_reg_274.read());
}

void compute_features::thread_slope_ip_fu_749_p1() {
    slope_ip_fu_749_p1 = xor_ln135_fu_743_p2.read();
}

void compute_features::thread_sub_ln1311_fu_533_p2() {
    sub_ln1311_fu_533_p2 = (!ap_const_lv8_7F.is_01() || !tmp_V_fu_487_p4.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_7F) - sc_biguint<8>(tmp_V_fu_487_p4.read()));
}

void compute_features::thread_tdia_1_fu_714_p3() {
    tdia_1_fu_714_p3 = (!and_ln124_1_reg_1027.read()[0].is_01())? sc_lv<32>(): ((and_ln124_1_reg_1027.read()[0].to_bool())? reg_405.read(): x_assign_reg_250.read());
}

void compute_features::thread_tmp_12_fu_638_p4() {
    tmp_12_fu_638_p4 = bitcast_ln124_fu_634_p1.read().range(30, 23);
}

void compute_features::thread_tmp_13_fu_656_p4() {
    tmp_13_fu_656_p4 = bitcast_ln124_1_fu_652_p1.read().range(30, 23);
}

void compute_features::thread_tmp_15_fu_587_p4() {
    tmp_15_fu_587_p4 = r_V_2_fu_569_p2.read().range(55, 24);
}

void compute_features::thread_tmp_16_fu_757_p4() {
    tmp_16_fu_757_p4 = bitcast_ln138_1_fu_753_p1.read().range(30, 23);
}

void compute_features::thread_tmp_17_fu_792_p4() {
    tmp_17_fu_792_p4 = bitcast_ln130_fu_789_p1.read().range(30, 23);
}

void compute_features::thread_tmp_18_fu_810_p4() {
    tmp_18_fu_810_p4 = bitcast_ln130_1_fu_806_p1.read().range(30, 23);
}

void compute_features::thread_tmp_20_fu_891_p4() {
    tmp_20_fu_891_p4 = bitcast_ln138_fu_887_p1.read().range(30, 23);
}

void compute_features::thread_tmp_25_fu_575_p3() {
    tmp_25_fu_575_p3 = r_V_fu_563_p2.read().range(24, 24);
}

void compute_features::thread_tmp_V_9_fu_497_p1() {
    tmp_V_9_fu_497_p1 = p_Val2_s_fu_475_p1.read().range(23-1, 0);
}

void compute_features::thread_tmp_V_fu_487_p4() {
    tmp_V_fu_487_p4 = p_Val2_s_fu_475_p1.read().range(30, 23);
}

void compute_features::thread_trunc_ln124_1_fu_666_p1() {
    trunc_ln124_1_fu_666_p1 = bitcast_ln124_1_fu_652_p1.read().range(23-1, 0);
}

void compute_features::thread_trunc_ln124_fu_648_p1() {
    trunc_ln124_fu_648_p1 = bitcast_ln124_fu_634_p1.read().range(23-1, 0);
}

void compute_features::thread_trunc_ln130_1_fu_820_p1() {
    trunc_ln130_1_fu_820_p1 = bitcast_ln130_1_fu_806_p1.read().range(23-1, 0);
}

void compute_features::thread_trunc_ln130_fu_802_p1() {
    trunc_ln130_fu_802_p1 = bitcast_ln130_fu_789_p1.read().range(23-1, 0);
}

void compute_features::thread_trunc_ln138_1_fu_901_p1() {
    trunc_ln138_1_fu_901_p1 = bitcast_ln138_fu_887_p1.read().range(23-1, 0);
}

void compute_features::thread_trunc_ln138_fu_767_p1() {
    trunc_ln138_fu_767_p1 = bitcast_ln138_1_fu_753_p1.read().range(23-1, 0);
}

void compute_features::thread_ush_fu_543_p3() {
    ush_fu_543_p3 = (!isNeg_fu_525_p3.read()[0].is_01())? sc_lv<9>(): ((isNeg_fu_525_p3.read()[0].to_bool())? sext_ln1311_fu_539_p1.read(): add_ln339_fu_519_p2.read());
}

void compute_features::thread_xor_ln135_fu_743_p2() {
    xor_ln135_fu_743_p2 = (bitcast_ln135_fu_739_p1.read() ^ ap_const_lv32_80000000);
}

void compute_features::thread_zext_ln109_fu_438_p1() {
    zext_ln109_fu_438_p1 = esl_zext<64,8>(i_0_reg_228.read());
}

void compute_features::thread_zext_ln115_1_fu_460_p1() {
    zext_ln115_1_fu_460_p1 = esl_zext<64,8>(i1_0_reg_239.read());
}

void compute_features::thread_zext_ln115_fu_455_p1() {
    zext_ln115_fu_455_p1 = esl_zext<64,8>(i_1_fu_449_p2.read());
}

void compute_features::thread_zext_ln123_fu_465_p1() {
    zext_ln123_fu_465_p1 = esl_zext<32,8>(i2_0_reg_262.read());
}

void compute_features::thread_zext_ln124_fu_619_p1() {
    zext_ln124_fu_619_p1 = esl_zext<64,8>(i2_0_reg_262.read());
}

void compute_features::thread_zext_ln1287_fu_559_p1() {
    zext_ln1287_fu_559_p1 = esl_zext<79,32>(sext_ln1311_2_fu_551_p1.read());
}

void compute_features::thread_zext_ln130_fu_727_p1() {
    zext_ln130_fu_727_p1 = esl_zext<64,7>(i3_0_reg_298.read());
}

void compute_features::thread_zext_ln339_fu_515_p1() {
    zext_ln339_fu_515_p1 = esl_zext<9,8>(tmp_V_fu_487_p4.read());
}

void compute_features::thread_zext_ln662_fu_583_p1() {
    zext_ln662_fu_583_p1 = esl_zext<32,1>(tmp_25_fu_575_p3.read());
}

void compute_features::thread_zext_ln682_fu_511_p1() {
    zext_ln682_fu_511_p1 = esl_zext<79,25>(mantissa_V_fu_501_p4.read());
}

void compute_features::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln108_fu_426_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, normalized_in_V_empty_n.read())) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln108_fu_426_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln108_fu_426_p2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln108_fu_426_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, normalized_in_V_empty_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln114_fu_443_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln123_fu_469_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state19;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 262144 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln129_fu_721_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state22;
            } else {
                ap_NS_fsm = ap_ST_fsm_state20;
            }
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, and_ln138_1_fu_926_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state40;
            } else {
                ap_NS_fsm = ap_ST_fsm_state28;
            }
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_fsm_state36;
            break;
        case 34359738368 : 
            ap_NS_fsm = ap_ST_fsm_state37;
            break;
        case 68719476736 : 
            ap_NS_fsm = ap_ST_fsm_state38;
            break;
        case 137438953472 : 
            ap_NS_fsm = ap_ST_fsm_state39;
            break;
        case 274877906944 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 549755813888 : 
            ap_NS_fsm = ap_ST_fsm_state41;
            break;
        case 1099511627776 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) && esl_seteq<1,1,1>(features_out_V_1_ack_in.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state42;
            } else {
                ap_NS_fsm = ap_ST_fsm_state41;
            }
            break;
        case 2199023255552 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) && esl_seteq<1,1,1>(features_out_V_1_ack_in.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state43;
            } else {
                ap_NS_fsm = ap_ST_fsm_state42;
            }
            break;
        case 4398046511104 : 
            ap_NS_fsm = ap_ST_fsm_state44;
            break;
        case 8796093022208 : 
            ap_NS_fsm = ap_ST_fsm_state45;
            break;
        case 17592186044416 : 
            ap_NS_fsm = ap_ST_fsm_state46;
            break;
        case 35184372088832 : 
            ap_NS_fsm = ap_ST_fsm_state47;
            break;
        case 70368744177664 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()) && esl_seteq<1,1,1>(features_out_V_1_ack_in.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state48;
            } else {
                ap_NS_fsm = ap_ST_fsm_state47;
            }
            break;
        case 140737488355328 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) && esl_seteq<1,1,1>(features_out_V_1_ack_in.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state49;
            } else {
                ap_NS_fsm = ap_ST_fsm_state48;
            }
            break;
        case 281474976710656 : 
            ap_NS_fsm = ap_ST_fsm_state50;
            break;
        case 562949953421312 : 
            ap_NS_fsm = ap_ST_fsm_state51;
            break;
        case 1125899906842624 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read()) && esl_seteq<1,1,1>(features_out_V_1_ack_in.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state52;
            } else {
                ap_NS_fsm = ap_ST_fsm_state51;
            }
            break;
        case 2251799813685248 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read()) && esl_seteq<1,1,1>(features_out_V_1_ack_in.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state53;
            } else {
                ap_NS_fsm = ap_ST_fsm_state52;
            }
            break;
        case 4503599627370496 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) && !(esl_seteq<1,2,2>(features_out_V_1_state.read(), ap_const_lv2_1) || esl_seteq<1,1,1>(ap_const_logic_0, features_out_V_1_ack_in.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, features_out_V_TREADY.read()) && 
  esl_seteq<1,2,2>(features_out_V_1_state.read(), ap_const_lv2_3))))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state53;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<53>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

