// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module peak_detection (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        in_V_TDATA,
        in_V_TVALID,
        in_V_TREADY,
        peak_loc_stream_V_V_din,
        peak_loc_stream_V_V_full_n,
        peak_loc_stream_V_V_write
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_state5 = 6'd16;
parameter    ap_ST_fsm_state6 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [31:0] in_V_TDATA;
input   in_V_TVALID;
output   in_V_TREADY;
output  [9:0] peak_loc_stream_V_V_din;
input   peak_loc_stream_V_V_full_n;
output   peak_loc_stream_V_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg in_V_TREADY;
reg peak_loc_stream_V_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    in_V_TDATA_blk_n;
wire    ap_CS_fsm_state2;
wire   [0:0] tmp_nbreadreq_fu_90_p3;
reg    peak_loc_stream_V_V_blk_n;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln40_fu_238_p2;
reg   [31:0] tmp_9_reg_450;
reg    ap_block_state2;
wire   [8:0] buf_wr_ptr_V_fu_204_p3;
reg   [8:0] buf_wr_ptr_V_reg_456;
wire   [9:0] tmp_V_1_fu_212_p1;
reg   [9:0] tmp_V_1_reg_461;
wire   [10:0] zext_ln215_fu_216_p1;
reg   [10:0] zext_ln215_reg_467;
wire   [31:0] bitcast_ln43_fu_220_p1;
reg   [31:0] bitcast_ln43_reg_472;
wire   [0:0] icmp_ln43_1_fu_228_p2;
reg   [0:0] icmp_ln43_1_reg_477;
reg   [0:0] icmp_ln40_reg_482;
reg    ap_block_state3;
wire   [10:0] select_ln1372_fu_308_p3;
reg   [10:0] select_ln1372_reg_486;
wire   [0:0] or_ln43_fu_331_p2;
reg   [0:0] or_ln43_reg_491;
wire    ap_CS_fsm_state4;
wire   [31:0] buf_buffer_q0;
wire    ap_CS_fsm_state5;
wire   [31:0] buf_buffer_q1;
wire   [0:0] icmp_ln43_2_fu_363_p2;
reg   [0:0] icmp_ln43_2_reg_517;
wire   [0:0] icmp_ln43_3_fu_369_p2;
reg   [0:0] icmp_ln43_3_reg_522;
wire   [0:0] icmp_ln43_4_fu_393_p2;
reg   [0:0] icmp_ln43_4_reg_527;
wire   [0:0] icmp_ln43_5_fu_399_p2;
reg   [0:0] icmp_ln43_5_reg_532;
wire   [6:0] i_fu_441_p2;
wire    ap_CS_fsm_state6;
wire   [0:0] or_ln43_3_fu_435_p2;
reg   [8:0] buf_buffer_address0;
reg    buf_buffer_ce0;
reg    buf_buffer_we0;
wire   [8:0] buf_buffer_address1;
reg    buf_buffer_ce1;
reg   [8:0] t_V_reg_142;
reg    ap_block_state1;
reg   [6:0] i_0_reg_153;
wire   [63:0] zext_ln544_fu_175_p1;
wire   [63:0] zext_ln544_1_fu_336_p1;
wire  signed [63:0] sext_ln544_fu_341_p1;
wire   [9:0] zext_ln112_fu_180_p1;
wire   [9:0] add_ln700_fu_184_p2;
wire   [0:0] tmp_2_fu_196_p3;
wire   [8:0] add_ln891_fu_190_p2;
wire   [22:0] trunc_ln43_fu_224_p1;
wire   [9:0] zext_ln40_fu_234_p1;
wire   [9:0] add_ln42_fu_244_p2;
wire   [10:0] zext_ln215_1_fu_249_p1;
wire   [10:0] ret_V_fu_253_p2;
wire   [10:0] ret_V_1_fu_258_p2;
wire   [8:0] trunc_ln1372_fu_272_p1;
wire   [8:0] trunc_ln1372_1_fu_284_p1;
wire   [8:0] sub_ln1372_fu_288_p2;
wire   [10:0] p_and_t_fu_294_p3;
wire   [0:0] tmp_6_fu_264_p3;
wire   [10:0] sub_ln1372_1_fu_302_p2;
wire   [10:0] p_and_f_fu_276_p3;
wire   [7:0] tmp_3_fu_316_p4;
wire   [0:0] icmp_ln43_fu_325_p2;
wire   [31:0] bitcast_ln43_1_fu_345_p1;
wire   [7:0] tmp_4_fu_349_p4;
wire   [22:0] trunc_ln43_1_fu_359_p1;
wire   [31:0] bitcast_ln43_2_fu_375_p1;
wire   [7:0] tmp_7_fu_379_p4;
wire   [22:0] trunc_ln43_2_fu_389_p1;
wire   [0:0] or_ln43_1_fu_405_p2;
wire   [0:0] and_ln43_fu_409_p2;
wire   [0:0] grp_fu_165_p2;
wire   [0:0] or_ln43_2_fu_420_p2;
wire   [0:0] and_ln43_2_fu_424_p2;
wire   [0:0] grp_fu_170_p2;
wire   [0:0] and_ln43_1_fu_414_p2;
wire   [0:0] and_ln43_3_fu_429_p2;
reg   [5:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 6'd1;
end

peak_detection_bubkb #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
buf_buffer_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_buffer_address0),
    .ce0(buf_buffer_ce0),
    .we0(buf_buffer_we0),
    .d0(in_V_TDATA),
    .q0(buf_buffer_q0),
    .address1(buf_buffer_address1),
    .ce1(buf_buffer_ce1),
    .q1(buf_buffer_q1)
);

feature_extractorcud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
feature_extractorcud_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_9_reg_450),
    .din1(buf_buffer_q0),
    .ce(1'b1),
    .opcode(5'd3),
    .dout(grp_fu_165_p2)
);

feature_extractorcud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
feature_extractorcud_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_9_reg_450),
    .din1(buf_buffer_q1),
    .ce(1'b1),
    .opcode(5'd3),
    .dout(grp_fu_170_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((tmp_nbreadreq_fu_90_p3 == 1'd1) & (in_V_TVALID == 1'b0)) & (tmp_nbreadreq_fu_90_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln43_3_fu_435_p2 == 1'd0) & (icmp_ln40_reg_482 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        i_0_reg_153 <= i_fu_441_p2;
    end else if ((~((tmp_nbreadreq_fu_90_p3 == 1'd1) & (in_V_TVALID == 1'b0)) & (tmp_nbreadreq_fu_90_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_0_reg_153 <= 7'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & ((icmp_ln40_reg_482 == 1'd0) | (or_ln43_3_fu_435_p2 == 1'd1)))) begin
        t_V_reg_142 <= buf_wr_ptr_V_reg_456;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        t_V_reg_142 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((tmp_nbreadreq_fu_90_p3 == 1'd1) & (in_V_TVALID == 1'b0)) & (tmp_nbreadreq_fu_90_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        bitcast_ln43_reg_472 <= bitcast_ln43_fu_220_p1;
        buf_wr_ptr_V_reg_456 <= buf_wr_ptr_V_fu_204_p3;
        icmp_ln43_1_reg_477 <= icmp_ln43_1_fu_228_p2;
        tmp_9_reg_450 <= in_V_TDATA;
        tmp_V_1_reg_461[8 : 0] <= tmp_V_1_fu_212_p1[8 : 0];
        zext_ln215_reg_467[8 : 0] <= zext_ln215_fu_216_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln40_fu_238_p2 == 1'd0) & (peak_loc_stream_V_V_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
        icmp_ln40_reg_482 <= icmp_ln40_fu_238_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        icmp_ln43_2_reg_517 <= icmp_ln43_2_fu_363_p2;
        icmp_ln43_3_reg_522 <= icmp_ln43_3_fu_369_p2;
        icmp_ln43_4_reg_527 <= icmp_ln43_4_fu_393_p2;
        icmp_ln43_5_reg_532 <= icmp_ln43_5_fu_399_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln40_fu_238_p2 == 1'd0) & (peak_loc_stream_V_V_full_n == 1'b0)) & (icmp_ln40_fu_238_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        or_ln43_reg_491 <= or_ln43_fu_331_p2;
        select_ln1372_reg_486 <= select_ln1372_fu_308_p3;
    end
end

always @ (*) begin
    if ((~((tmp_nbreadreq_fu_90_p3 == 1'd1) & (in_V_TVALID == 1'b0)) & (tmp_nbreadreq_fu_90_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        buf_buffer_address0 = zext_ln544_1_fu_336_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        buf_buffer_address0 = zext_ln544_fu_175_p1;
    end else begin
        buf_buffer_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (~((tmp_nbreadreq_fu_90_p3 == 1'd1) & (in_V_TVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        buf_buffer_ce0 = 1'b1;
    end else begin
        buf_buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        buf_buffer_ce1 = 1'b1;
    end else begin
        buf_buffer_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((tmp_nbreadreq_fu_90_p3 == 1'd1) & (in_V_TVALID == 1'b0)) & (tmp_nbreadreq_fu_90_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        buf_buffer_we0 = 1'b1;
    end else begin
        buf_buffer_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_nbreadreq_fu_90_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        in_V_TDATA_blk_n = in_V_TVALID;
    end else begin
        in_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((tmp_nbreadreq_fu_90_p3 == 1'd1) & (in_V_TVALID == 1'b0)) & (tmp_nbreadreq_fu_90_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        in_V_TREADY = 1'b1;
    end else begin
        in_V_TREADY = 1'b0;
    end
end

always @ (*) begin
    if ((~((tmp_nbreadreq_fu_90_p3 == 1'd1) & (in_V_TVALID == 1'b0)) & (tmp_nbreadreq_fu_90_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln40_fu_238_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        peak_loc_stream_V_V_blk_n = peak_loc_stream_V_V_full_n;
    end else begin
        peak_loc_stream_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((icmp_ln40_fu_238_p2 == 1'd0) & (peak_loc_stream_V_V_full_n == 1'b0)) & (icmp_ln40_fu_238_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        peak_loc_stream_V_V_write = 1'b1;
    end else begin
        peak_loc_stream_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((tmp_nbreadreq_fu_90_p3 == 1'd1) & (in_V_TVALID == 1'b0)) & (tmp_nbreadreq_fu_90_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if ((~((tmp_nbreadreq_fu_90_p3 == 1'd1) & (in_V_TVALID == 1'b0)) & (tmp_nbreadreq_fu_90_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~((icmp_ln40_fu_238_p2 == 1'd0) & (peak_loc_stream_V_V_full_n == 1'b0)) & (icmp_ln40_fu_238_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else if ((~((icmp_ln40_fu_238_p2 == 1'd0) & (peak_loc_stream_V_V_full_n == 1'b0)) & (icmp_ln40_fu_238_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & ((icmp_ln40_reg_482 == 1'd0) | (or_ln43_3_fu_435_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln42_fu_244_p2 = (tmp_V_1_reg_461 + zext_ln40_fu_234_p1);

assign add_ln700_fu_184_p2 = (10'd1 + zext_ln112_fu_180_p1);

assign add_ln891_fu_190_p2 = (9'd1 + t_V_reg_142);

assign and_ln43_1_fu_414_p2 = (grp_fu_165_p2 & and_ln43_fu_409_p2);

assign and_ln43_2_fu_424_p2 = (or_ln43_reg_491 & or_ln43_2_fu_420_p2);

assign and_ln43_3_fu_429_p2 = (grp_fu_170_p2 & and_ln43_2_fu_424_p2);

assign and_ln43_fu_409_p2 = (or_ln43_reg_491 & or_ln43_1_fu_405_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state2 = ((tmp_nbreadreq_fu_90_p3 == 1'd1) & (in_V_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state3 = ((icmp_ln40_fu_238_p2 == 1'd0) & (peak_loc_stream_V_V_full_n == 1'b0));
end

assign ap_ready = internal_ap_ready;

assign bitcast_ln43_1_fu_345_p1 = buf_buffer_q0;

assign bitcast_ln43_2_fu_375_p1 = buf_buffer_q1;

assign bitcast_ln43_fu_220_p1 = in_V_TDATA;

assign buf_buffer_address1 = sext_ln544_fu_341_p1;

assign buf_wr_ptr_V_fu_204_p3 = ((tmp_2_fu_196_p3[0:0] === 1'b1) ? 9'd0 : add_ln891_fu_190_p2);

assign i_fu_441_p2 = (i_0_reg_153 + 7'd1);

assign icmp_ln40_fu_238_p2 = ((i_0_reg_153 < 7'd111) ? 1'b1 : 1'b0);

assign icmp_ln43_1_fu_228_p2 = ((trunc_ln43_fu_224_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln43_2_fu_363_p2 = ((tmp_4_fu_349_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln43_3_fu_369_p2 = ((trunc_ln43_1_fu_359_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln43_4_fu_393_p2 = ((tmp_7_fu_379_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln43_5_fu_399_p2 = ((trunc_ln43_2_fu_389_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln43_fu_325_p2 = ((tmp_3_fu_316_p4 != 8'd255) ? 1'b1 : 1'b0);

assign or_ln43_1_fu_405_p2 = (icmp_ln43_3_reg_522 | icmp_ln43_2_reg_517);

assign or_ln43_2_fu_420_p2 = (icmp_ln43_5_reg_532 | icmp_ln43_4_reg_527);

assign or_ln43_3_fu_435_p2 = (and_ln43_3_fu_429_p2 | and_ln43_1_fu_414_p2);

assign or_ln43_fu_331_p2 = (icmp_ln43_fu_325_p2 | icmp_ln43_1_reg_477);

assign p_and_f_fu_276_p3 = {{2'd0}, {trunc_ln1372_fu_272_p1}};

assign p_and_t_fu_294_p3 = {{2'd0}, {sub_ln1372_fu_288_p2}};

assign peak_loc_stream_V_V_din = tmp_V_1_reg_461;

assign ret_V_1_fu_258_p2 = (11'd512 + ret_V_fu_253_p2);

assign ret_V_fu_253_p2 = (zext_ln215_reg_467 - zext_ln215_1_fu_249_p1);

assign select_ln1372_fu_308_p3 = ((tmp_6_fu_264_p3[0:0] === 1'b1) ? sub_ln1372_1_fu_302_p2 : p_and_f_fu_276_p3);

assign sext_ln544_fu_341_p1 = $signed(select_ln1372_reg_486);

assign start_out = real_start;

assign sub_ln1372_1_fu_302_p2 = (11'd0 - p_and_t_fu_294_p3);

assign sub_ln1372_fu_288_p2 = (9'd0 - trunc_ln1372_1_fu_284_p1);

assign tmp_2_fu_196_p3 = add_ln700_fu_184_p2[32'd9];

assign tmp_3_fu_316_p4 = {{bitcast_ln43_reg_472[30:23]}};

assign tmp_4_fu_349_p4 = {{bitcast_ln43_1_fu_345_p1[30:23]}};

assign tmp_6_fu_264_p3 = ret_V_1_fu_258_p2[32'd10];

assign tmp_7_fu_379_p4 = {{bitcast_ln43_2_fu_375_p1[30:23]}};

assign tmp_V_1_fu_212_p1 = buf_wr_ptr_V_fu_204_p3;

assign tmp_nbreadreq_fu_90_p3 = in_V_TVALID;

assign trunc_ln1372_1_fu_284_p1 = ret_V_fu_253_p2[8:0];

assign trunc_ln1372_fu_272_p1 = ret_V_1_fu_258_p2[8:0];

assign trunc_ln43_1_fu_359_p1 = bitcast_ln43_1_fu_345_p1[22:0];

assign trunc_ln43_2_fu_389_p1 = bitcast_ln43_2_fu_375_p1[22:0];

assign trunc_ln43_fu_224_p1 = bitcast_ln43_fu_220_p1[22:0];

assign zext_ln112_fu_180_p1 = t_V_reg_142;

assign zext_ln215_1_fu_249_p1 = add_ln42_fu_244_p2;

assign zext_ln215_fu_216_p1 = buf_wr_ptr_V_fu_204_p3;

assign zext_ln40_fu_234_p1 = i_0_reg_153;

assign zext_ln544_1_fu_336_p1 = i_0_reg_153;

assign zext_ln544_fu_175_p1 = t_V_reg_142;

always @ (posedge ap_clk) begin
    tmp_V_1_reg_461[9] <= 1'b0;
    zext_ln215_reg_467[10:9] <= 2'b00;
end

endmodule //peak_detection
